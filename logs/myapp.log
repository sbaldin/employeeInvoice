[INFO] 13.01.2020 16:41:38 [main] com.github.sbaldin.invoicer.ApplicationKt  - Args:./build/resources/main/application.yaml
[INFO] 13.01.2020 16:41:38 [main] com.github.sbaldin.invoicer.ApplicationKt  - Application config path:./build/resources/main/application.yaml
[INFO] 13.01.2020 16:41:39 [main] com.github.sbaldin.invoicer.ApplicationKt  - Application will produce full-filled pdf files with signatures
[DEBUG] 13.01.2020 16:41:39 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Could not find template in cache, creating new one; id=["invoice_foreign.html"["en_US",UTF-8,parsed] ]
[DEBUG] 13.01.2020 16:41:39 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Compiling FreeMarker template "invoice_foreign.html"["en_US",UTF-8,parsed]  from "jar:file:/home/sbaldin/workspace/employer_reports/build/install/employer_reports-shadow/lib/employer_reports-0.1-all.jar!/invoice_foreign.html"
[DEBUG] 13.01.2020 16:41:39 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Could not find template in cache, creating new one; id=["invoice_local.html"["en_US",UTF-8,parsed] ]
[DEBUG] 13.01.2020 16:41:39 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Compiling FreeMarker template "invoice_local.html"["en_US",UTF-8,parsed]  from "jar:file:/home/sbaldin/workspace/employer_reports/build/install/employer_reports-shadow/lib/employer_reports-0.1-all.jar!/invoice_local.html"
[INFO] 13.01.2020 16:41:39 [main] com.github.sbaldin.invoicer.processor.SaveAsPdfProcessor  - Following command will be executed: 
 /home/sbaldin/workspace/employer_reports/binaries/phantomjs_lin64, /home/sbaldin/workspace/employer_reports/binaries/rasterize.js, /home/sbaldin/workspace/employer_reports/filled_template1663836829.html, /home/sbaldin/Ivan Ivanov foreign invoice.pdf
[ERROR] 13.01.2020 16:41:39 [main] com.github.sbaldin.invoicer.processor.SaveAsPdfProcessor  - Error during saving invoice as pdf
java.io.IOException: Cannot run program "/home/sbaldin/workspace/employer_reports/binaries/phantomjs_lin64": error=13, Permission denied
	at java.lang.ProcessBuilder.start(ProcessBuilder.java:1048)
	at java.lang.Runtime.exec(Runtime.java:620)
	at java.lang.Runtime.exec(Runtime.java:485)
	at com.github.sbaldin.invoicer.processor.SaveAsPdfProcessor.process(SaveAsPdfProcessor.kt:31)
	at com.github.sbaldin.invoicer.ApplicationKt.main(Application.kt:58)
Caused by: java.io.IOException: error=13, Permission denied
	at java.lang.UNIXProcess.forkAndExec(Native Method)
	at java.lang.UNIXProcess.<init>(UNIXProcess.java:247)
	at java.lang.ProcessImpl.start(ProcessImpl.java:134)
	at java.lang.ProcessBuilder.start(ProcessBuilder.java:1029)
	... 4 more
[INFO] 13.01.2020 16:41:39 [main] com.github.sbaldin.invoicer.processor.SaveAsPdfProcessor  - Following command will be executed: 
 /home/sbaldin/workspace/employer_reports/binaries/phantomjs_lin64, /home/sbaldin/workspace/employer_reports/binaries/rasterize.js, /home/sbaldin/workspace/employer_reports/filled_template2122581944.html, /home/sbaldin/Ivan Ivanov local invoice.pdf
[ERROR] 13.01.2020 16:41:39 [main] com.github.sbaldin.invoicer.processor.SaveAsPdfProcessor  - Error during saving invoice as pdf
java.io.IOException: Cannot run program "/home/sbaldin/workspace/employer_reports/binaries/phantomjs_lin64": error=13, Permission denied
	at java.lang.ProcessBuilder.start(ProcessBuilder.java:1048)
	at java.lang.Runtime.exec(Runtime.java:620)
	at java.lang.Runtime.exec(Runtime.java:485)
	at com.github.sbaldin.invoicer.processor.SaveAsPdfProcessor.process(SaveAsPdfProcessor.kt:31)
	at com.github.sbaldin.invoicer.ApplicationKt.main(Application.kt:58)
Caused by: java.io.IOException: error=13, Permission denied
	at java.lang.UNIXProcess.forkAndExec(Native Method)
	at java.lang.UNIXProcess.<init>(UNIXProcess.java:247)
	at java.lang.ProcessImpl.start(ProcessImpl.java:134)
	at java.lang.ProcessBuilder.start(ProcessBuilder.java:1029)
	... 4 more
[INFO] 13.01.2020 16:41:39 [main] com.github.sbaldin.invoicer.ApplicationKt  - Invoices generation finished.
[INFO] 13.01.2020 16:47:46 [main] com.github.sbaldin.invoicer.ApplicationKt  - Args:./build/resources/main/application.yaml
[INFO] 13.01.2020 16:47:46 [main] com.github.sbaldin.invoicer.ApplicationKt  - Application config path:./build/resources/main/application.yaml
[INFO] 13.01.2020 16:47:47 [main] com.github.sbaldin.invoicer.ApplicationKt  - Application will produce full-filled pdf files with signatures
[DEBUG] 13.01.2020 16:47:47 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Could not find template in cache, creating new one; id=["invoice_foreign.html"["en_US",UTF-8,parsed] ]
[DEBUG] 13.01.2020 16:47:47 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Compiling FreeMarker template "invoice_foreign.html"["en_US",UTF-8,parsed]  from "jar:file:/home/sbaldin/workspace/employer_reports/build/install/employer_reports-shadow/lib/employer_reports-0.1-all.jar!/invoice_foreign.html"
[DEBUG] 13.01.2020 16:47:47 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Could not find template in cache, creating new one; id=["invoice_local.html"["en_US",UTF-8,parsed] ]
[DEBUG] 13.01.2020 16:47:47 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Compiling FreeMarker template "invoice_local.html"["en_US",UTF-8,parsed]  from "jar:file:/home/sbaldin/workspace/employer_reports/build/install/employer_reports-shadow/lib/employer_reports-0.1-all.jar!/invoice_local.html"
[INFO] 13.01.2020 16:47:47 [main] com.github.sbaldin.invoicer.processor.SaveAsPdfProcessor  - Following command will be executed: 
 /home/sbaldin/workspace/employer_reports/binaries/phantomjs_lin64, /home/sbaldin/workspace/employer_reports/binaries/rasterize.js, /home/sbaldin/workspace/employer_reports/filled_template336993717.html, /home/sbaldin/Ivan Ivanov foreign invoice.pdf
[INFO] 13.01.2020 16:47:47 [main] com.github.sbaldin.invoicer.processor.SaveAsPdfProcessor  - Following command will be executed: 
 /home/sbaldin/workspace/employer_reports/binaries/phantomjs_lin64, /home/sbaldin/workspace/employer_reports/binaries/rasterize.js, /home/sbaldin/workspace/employer_reports/filled_template-208752248.html, /home/sbaldin/Ivan Ivanov local invoice.pdf
[INFO] 13.01.2020 16:47:47 [main] com.github.sbaldin.invoicer.ApplicationKt  - Invoices generation finished.
[INFO] 14.01.2020 11:57:54 [main] com.github.sbaldin.invoicer.ApplicationKt  - Args:
[INFO] 23.01.2020 22:01:53 [main] com.github.sbaldin.invoicer.ApplicationKt  - Args:
[WARN] 23.01.2020 22:01:53 [main] com.github.sbaldin.invoicer.ApplicationKt  - Args doesn't contain the path to Application.yaml, the default path will be used instead.
[INFO] 23.01.2020 22:01:53 [main] com.github.sbaldin.invoicer.ApplicationKt  - Application config path:./application-invoicer.yaml
[INFO] 23.01.2020 22:04:29 [main] com.github.sbaldin.invoicer.ApplicationKt  - Args:
[INFO] 23.01.2020 22:28:09 [main] com.github.sbaldin.invoicer.ApplicationKt  - Args:./build/resources/main/application.yaml
[INFO] 23.01.2020 22:28:09 [main] com.github.sbaldin.invoicer.ApplicationKt  - Application config path:./build/resources/main/application.yaml
[INFO] 23.01.2020 22:28:10 [main] com.github.sbaldin.invoicer.ApplicationKt  - Application will produce full-filled pdf files with signatures
[DEBUG] 23.01.2020 22:28:10 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Could not find template in cache, creating new one; id=["invoice_foreign.html"["en_US",UTF-8,parsed] ]
[DEBUG] 23.01.2020 22:28:10 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Compiling FreeMarker template "invoice_foreign.html"["en_US",UTF-8,parsed]  from "file:/home/sbaldin/workspace/employer_reports/build/resources/main/invoice_foreign.html"
[DEBUG] 23.01.2020 22:28:10 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Could not find template in cache, creating new one; id=["invoice_local.html"["en_US",UTF-8,parsed] ]
[DEBUG] 23.01.2020 22:28:10 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Compiling FreeMarker template "invoice_local.html"["en_US",UTF-8,parsed]  from "file:/home/sbaldin/workspace/employer_reports/build/resources/main/invoice_local.html"
[INFO] 23.01.2020 22:28:10 [main] com.github.sbaldin.invoicer.processor.SaveAsPdfProcessor  - Following command will be executed: 
 /home/sbaldin/workspace/employer_reports/binaries/phantomjs_lin64, /home/sbaldin/workspace/employer_reports/binaries/rasterize.js, /home/sbaldin/workspace/employer_reports/filled_template-171586528.html, /home/sbaldin/Ivan Ivanov foreign invoice.pdf
[ERROR] 23.01.2020 22:28:10 [main] com.github.sbaldin.invoicer.processor.SaveAsPdfProcessor  - Error during saving invoice as pdf
java.io.IOException: Cannot run program "/home/sbaldin/workspace/employer_reports/binaries/phantomjs_lin64": error=13, Permission denied
	at java.lang.ProcessBuilder.start(ProcessBuilder.java:1048)
	at java.lang.Runtime.exec(Runtime.java:620)
	at java.lang.Runtime.exec(Runtime.java:485)
	at com.github.sbaldin.invoicer.processor.SaveAsPdfProcessor.process(SaveAsPdfProcessor.kt:31)
	at com.github.sbaldin.invoicer.ApplicationKt.main(Application.kt:63)
Caused by: java.io.IOException: error=13, Permission denied
	at java.lang.UNIXProcess.forkAndExec(Native Method)
	at java.lang.UNIXProcess.<init>(UNIXProcess.java:247)
	at java.lang.ProcessImpl.start(ProcessImpl.java:134)
	at java.lang.ProcessBuilder.start(ProcessBuilder.java:1029)
	... 4 more
[INFO] 23.01.2020 22:28:10 [main] com.github.sbaldin.invoicer.processor.SaveAsPdfProcessor  - Following command will be executed: 
 /home/sbaldin/workspace/employer_reports/binaries/phantomjs_lin64, /home/sbaldin/workspace/employer_reports/binaries/rasterize.js, /home/sbaldin/workspace/employer_reports/filled_template1714479528.html, /home/sbaldin/Ivan Ivanov local invoice.pdf
[ERROR] 23.01.2020 22:28:10 [main] com.github.sbaldin.invoicer.processor.SaveAsPdfProcessor  - Error during saving invoice as pdf
java.io.IOException: Cannot run program "/home/sbaldin/workspace/employer_reports/binaries/phantomjs_lin64": error=13, Permission denied
	at java.lang.ProcessBuilder.start(ProcessBuilder.java:1048)
	at java.lang.Runtime.exec(Runtime.java:620)
	at java.lang.Runtime.exec(Runtime.java:485)
	at com.github.sbaldin.invoicer.processor.SaveAsPdfProcessor.process(SaveAsPdfProcessor.kt:31)
	at com.github.sbaldin.invoicer.ApplicationKt.main(Application.kt:63)
Caused by: java.io.IOException: error=13, Permission denied
	at java.lang.UNIXProcess.forkAndExec(Native Method)
	at java.lang.UNIXProcess.<init>(UNIXProcess.java:247)
	at java.lang.ProcessImpl.start(ProcessImpl.java:134)
	at java.lang.ProcessBuilder.start(ProcessBuilder.java:1029)
	... 4 more
[INFO] 23.01.2020 22:28:10 [main] com.github.sbaldin.invoicer.ApplicationKt  - Invoices generation finished.
[INFO] 23.01.2020 22:28:38 [main] com.github.sbaldin.invoicer.ApplicationKt  - Args:./build/resources/main/application.yaml
[INFO] 23.01.2020 22:28:38 [main] com.github.sbaldin.invoicer.ApplicationKt  - Application config path:./build/resources/main/application.yaml
[INFO] 23.01.2020 22:28:39 [main] com.github.sbaldin.invoicer.ApplicationKt  - Application will produce full-filled pdf files with signatures
[DEBUG] 23.01.2020 22:28:39 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Could not find template in cache, creating new one; id=["invoice_foreign.html"["en_US",UTF-8,parsed] ]
[DEBUG] 23.01.2020 22:28:39 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Compiling FreeMarker template "invoice_foreign.html"["en_US",UTF-8,parsed]  from "jar:file:/home/sbaldin/workspace/employer_reports/build/install/invoicer-shadow/lib/invoicer-0.3-all.jar!/invoice_foreign.html"
[DEBUG] 23.01.2020 22:28:39 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Could not find template in cache, creating new one; id=["invoice_local.html"["en_US",UTF-8,parsed] ]
[DEBUG] 23.01.2020 22:28:39 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Compiling FreeMarker template "invoice_local.html"["en_US",UTF-8,parsed]  from "jar:file:/home/sbaldin/workspace/employer_reports/build/install/invoicer-shadow/lib/invoicer-0.3-all.jar!/invoice_local.html"
[INFO] 23.01.2020 22:28:39 [main] com.github.sbaldin.invoicer.processor.SaveAsPdfProcessor  - Following command will be executed: 
 /home/sbaldin/workspace/employer_reports/binaries/phantomjs_lin64, /home/sbaldin/workspace/employer_reports/binaries/rasterize.js, /home/sbaldin/workspace/employer_reports/filled_template-1092749703.html, /home/sbaldin/Ivan Ivanov foreign invoice.pdf
[ERROR] 23.01.2020 22:28:39 [main] com.github.sbaldin.invoicer.processor.SaveAsPdfProcessor  - Error during saving invoice as pdf
java.io.IOException: Cannot run program "/home/sbaldin/workspace/employer_reports/binaries/phantomjs_lin64": error=13, Permission denied
	at java.lang.ProcessBuilder.start(ProcessBuilder.java:1048)
	at java.lang.Runtime.exec(Runtime.java:620)
	at java.lang.Runtime.exec(Runtime.java:485)
	at com.github.sbaldin.invoicer.processor.SaveAsPdfProcessor.process(SaveAsPdfProcessor.kt:31)
	at com.github.sbaldin.invoicer.ApplicationKt.main(Application.kt:63)
Caused by: java.io.IOException: error=13, Permission denied
	at java.lang.UNIXProcess.forkAndExec(Native Method)
	at java.lang.UNIXProcess.<init>(UNIXProcess.java:247)
	at java.lang.ProcessImpl.start(ProcessImpl.java:134)
	at java.lang.ProcessBuilder.start(ProcessBuilder.java:1029)
	... 4 more
[INFO] 23.01.2020 22:28:39 [main] com.github.sbaldin.invoicer.processor.SaveAsPdfProcessor  - Following command will be executed: 
 /home/sbaldin/workspace/employer_reports/binaries/phantomjs_lin64, /home/sbaldin/workspace/employer_reports/binaries/rasterize.js, /home/sbaldin/workspace/employer_reports/filled_template1573739531.html, /home/sbaldin/Ivan Ivanov local invoice.pdf
[ERROR] 23.01.2020 22:28:39 [main] com.github.sbaldin.invoicer.processor.SaveAsPdfProcessor  - Error during saving invoice as pdf
java.io.IOException: Cannot run program "/home/sbaldin/workspace/employer_reports/binaries/phantomjs_lin64": error=13, Permission denied
	at java.lang.ProcessBuilder.start(ProcessBuilder.java:1048)
	at java.lang.Runtime.exec(Runtime.java:620)
	at java.lang.Runtime.exec(Runtime.java:485)
	at com.github.sbaldin.invoicer.processor.SaveAsPdfProcessor.process(SaveAsPdfProcessor.kt:31)
	at com.github.sbaldin.invoicer.ApplicationKt.main(Application.kt:63)
Caused by: java.io.IOException: error=13, Permission denied
	at java.lang.UNIXProcess.forkAndExec(Native Method)
	at java.lang.UNIXProcess.<init>(UNIXProcess.java:247)
	at java.lang.ProcessImpl.start(ProcessImpl.java:134)
	at java.lang.ProcessBuilder.start(ProcessBuilder.java:1029)
	... 4 more
[INFO] 23.01.2020 22:28:39 [main] com.github.sbaldin.invoicer.ApplicationKt  - Invoices generation finished.
[INFO] 23.01.2020 23:30:04 [main] com.github.sbaldin.invoicer.ApplicationKt  - Args:/home/sbaldin/.invoicer/application-invoicer.yaml
[INFO] 23.01.2020 23:30:04 [main] com.github.sbaldin.invoicer.ApplicationKt  - Application config path:/home/sbaldin/.invoicer/application-invoicer.yaml
[INFO] 23.01.2020 23:30:05 [main] com.github.sbaldin.invoicer.ApplicationKt  - Application will produce full-filled pdf files with signatures
[DEBUG] 23.01.2020 23:30:05 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Could not find template in cache, creating new one; id=["invoice_foreign.html"["en_US",UTF-8,parsed] ]
[DEBUG] 23.01.2020 23:30:05 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Compiling FreeMarker template "invoice_foreign.html"["en_US",UTF-8,parsed]  from "jar:file:/home/sbaldin/workspace/employer_reports/build/install/invoicer-shadow/lib/invoicer-0.3-all.jar!/invoice_foreign.html"
[DEBUG] 23.01.2020 23:30:05 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Could not find template in cache, creating new one; id=["invoice_local.html"["en_US",UTF-8,parsed] ]
[DEBUG] 23.01.2020 23:30:05 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Compiling FreeMarker template "invoice_local.html"["en_US",UTF-8,parsed]  from "jar:file:/home/sbaldin/workspace/employer_reports/build/install/invoicer-shadow/lib/invoicer-0.3-all.jar!/invoice_local.html"
[INFO] 23.01.2020 23:30:05 [main] com.github.sbaldin.invoicer.processor.SaveAsPdfProcessor  - Following command will be executed: 
 /home/sbaldin/workspace/employer_reports/binaries/phantomjs_lin64, /home/sbaldin/workspace/employer_reports/binaries/rasterize.js, /home/sbaldin/workspace/employer_reports/filled_template-685232019.html, /home/sbaldin/Ivan Ivanov foreign invoice.pdf
[ERROR] 23.01.2020 23:30:05 [main] com.github.sbaldin.invoicer.processor.SaveAsPdfProcessor  - Error during saving invoice as pdf
java.io.IOException: Cannot run program "/home/sbaldin/workspace/employer_reports/binaries/phantomjs_lin64": error=13, Permission denied
	at java.lang.ProcessBuilder.start(ProcessBuilder.java:1048)
	at java.lang.Runtime.exec(Runtime.java:620)
	at java.lang.Runtime.exec(Runtime.java:485)
	at com.github.sbaldin.invoicer.processor.SaveAsPdfProcessor.process(SaveAsPdfProcessor.kt:31)
	at com.github.sbaldin.invoicer.ApplicationKt.main(Application.kt:63)
Caused by: java.io.IOException: error=13, Permission denied
	at java.lang.UNIXProcess.forkAndExec(Native Method)
	at java.lang.UNIXProcess.<init>(UNIXProcess.java:247)
	at java.lang.ProcessImpl.start(ProcessImpl.java:134)
	at java.lang.ProcessBuilder.start(ProcessBuilder.java:1029)
	... 4 more
[INFO] 23.01.2020 23:30:05 [main] com.github.sbaldin.invoicer.processor.SaveAsPdfProcessor  - Following command will be executed: 
 /home/sbaldin/workspace/employer_reports/binaries/phantomjs_lin64, /home/sbaldin/workspace/employer_reports/binaries/rasterize.js, /home/sbaldin/workspace/employer_reports/filled_template-728538808.html, /home/sbaldin/Ivan Ivanov local invoice.pdf
[ERROR] 23.01.2020 23:30:05 [main] com.github.sbaldin.invoicer.processor.SaveAsPdfProcessor  - Error during saving invoice as pdf
java.io.IOException: Cannot run program "/home/sbaldin/workspace/employer_reports/binaries/phantomjs_lin64": error=13, Permission denied
	at java.lang.ProcessBuilder.start(ProcessBuilder.java:1048)
	at java.lang.Runtime.exec(Runtime.java:620)
	at java.lang.Runtime.exec(Runtime.java:485)
	at com.github.sbaldin.invoicer.processor.SaveAsPdfProcessor.process(SaveAsPdfProcessor.kt:31)
	at com.github.sbaldin.invoicer.ApplicationKt.main(Application.kt:63)
Caused by: java.io.IOException: error=13, Permission denied
	at java.lang.UNIXProcess.forkAndExec(Native Method)
	at java.lang.UNIXProcess.<init>(UNIXProcess.java:247)
	at java.lang.ProcessImpl.start(ProcessImpl.java:134)
	at java.lang.ProcessBuilder.start(ProcessBuilder.java:1029)
	... 4 more
[INFO] 23.01.2020 23:30:05 [main] com.github.sbaldin.invoicer.ApplicationKt  - Invoices generation finished.
[INFO] 23.01.2020 23:32:30 [main] com.github.sbaldin.invoicer.ApplicationKt  - Args:/home/sbaldin/.invoicer/application-invoicer.yaml
[INFO] 23.01.2020 23:32:30 [main] com.github.sbaldin.invoicer.ApplicationKt  - Application config path:/home/sbaldin/.invoicer/application-invoicer.yaml
[INFO] 23.01.2020 23:32:30 [main] com.github.sbaldin.invoicer.ApplicationKt  - Application will produce full-filled pdf files with signatures
[DEBUG] 23.01.2020 23:32:30 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Could not find template in cache, creating new one; id=["invoice_foreign.html"["en_US",UTF-8,parsed] ]
[DEBUG] 23.01.2020 23:32:30 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Compiling FreeMarker template "invoice_foreign.html"["en_US",UTF-8,parsed]  from "jar:file:/home/sbaldin/workspace/employer_reports/build/install/invoicer-shadow/lib/invoicer-0.3-all.jar!/invoice_foreign.html"
[DEBUG] 23.01.2020 23:32:31 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Could not find template in cache, creating new one; id=["invoice_local.html"["en_US",UTF-8,parsed] ]
[DEBUG] 23.01.2020 23:32:31 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Compiling FreeMarker template "invoice_local.html"["en_US",UTF-8,parsed]  from "jar:file:/home/sbaldin/workspace/employer_reports/build/install/invoicer-shadow/lib/invoicer-0.3-all.jar!/invoice_local.html"
[INFO] 23.01.2020 23:32:31 [main] com.github.sbaldin.invoicer.processor.SaveAsPdfProcessor  - Following command will be executed: 
 /home/sbaldin/workspace/employer_reports/binaries/phantomjs_lin64, /home/sbaldin/workspace/employer_reports/binaries/rasterize.js, /home/sbaldin/workspace/employer_reports/filled_template-577743513.html, /home/sbaldin/Ivan Ivanov foreign invoice.pdf
[INFO] 23.01.2020 23:32:31 [main] com.github.sbaldin.invoicer.processor.SaveAsPdfProcessor  - Following command will be executed: 
 /home/sbaldin/workspace/employer_reports/binaries/phantomjs_lin64, /home/sbaldin/workspace/employer_reports/binaries/rasterize.js, /home/sbaldin/workspace/employer_reports/filled_template-606702365.html, /home/sbaldin/Ivan Ivanov local invoice.pdf
[INFO] 23.01.2020 23:32:31 [main] com.github.sbaldin.invoicer.ApplicationKt  - Invoices generation finished.
[INFO] 24.01.2020 09:55:52 [main] com.github.sbaldin.invoicer.ApplicationKt  - Args:/home/sbaldin/.invoicer/application-invoicer.yaml
[INFO] 24.01.2020 09:55:52 [main] com.github.sbaldin.invoicer.ApplicationKt  - Application config path:/home/sbaldin/.invoicer/application-invoicer.yaml
[INFO] 24.01.2020 09:55:53 [main] com.github.sbaldin.invoicer.ApplicationKt  - Application will produce full-filled pdf files with signatures
[DEBUG] 24.01.2020 09:55:53 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Could not find template in cache, creating new one; id=["invoice_foreign.html"["en_US",UTF-8,parsed] ]
[DEBUG] 24.01.2020 09:55:53 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Compiling FreeMarker template "invoice_foreign.html"["en_US",UTF-8,parsed]  from "jar:file:/home/sbaldin/workspace/employer_reports/build/install/invoicer-shadow/lib/invoicer-0.3-all.jar!/invoice_foreign.html"
[DEBUG] 24.01.2020 09:55:53 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Could not find template in cache, creating new one; id=["invoice_local.html"["en_US",UTF-8,parsed] ]
[DEBUG] 24.01.2020 09:55:53 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Compiling FreeMarker template "invoice_local.html"["en_US",UTF-8,parsed]  from "jar:file:/home/sbaldin/workspace/employer_reports/build/install/invoicer-shadow/lib/invoicer-0.3-all.jar!/invoice_local.html"
[INFO] 24.01.2020 09:55:53 [main] com.github.sbaldin.invoicer.processor.SaveAsPdfProcessor  - Following command will be executed: 
 /home/sbaldin/workspace/employer_reports/binaries/phantomjs_lin64, /home/sbaldin/workspace/employer_reports/binaries/rasterize.js, /home/sbaldin/workspace/employer_reports/filled_template2043493883.html, /home/sbaldin/Ivan Ivanov foreign invoice.pdf
[INFO] 24.01.2020 09:55:53 [main] com.github.sbaldin.invoicer.processor.SaveAsPdfProcessor  - Following command will be executed: 
 /home/sbaldin/workspace/employer_reports/binaries/phantomjs_lin64, /home/sbaldin/workspace/employer_reports/binaries/rasterize.js, /home/sbaldin/workspace/employer_reports/filled_template475690913.html, /home/sbaldin/Ivan Ivanov local invoice.pdf
[INFO] 24.01.2020 09:55:54 [main] com.github.sbaldin.invoicer.ApplicationKt  - Invoices generation finished.
[INFO] 24.01.2020 10:06:41 [main] com.github.sbaldin.invoicer.ApplicationKt  - Args:./build/resources/main/application.yaml
[INFO] 24.01.2020 10:06:41 [main] com.github.sbaldin.invoicer.ApplicationKt  - Application config path:./build/resources/main/application.yaml
[INFO] 24.01.2020 10:06:42 [main] com.github.sbaldin.invoicer.ApplicationKt  - Invoice generation started. 
 Application will produce full-filled pdf files with signatures.
[DEBUG] 24.01.2020 10:06:42 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Could not find template in cache, creating new one; id=["invoice_foreign.html"["en_US",UTF-8,parsed] ]
[DEBUG] 24.01.2020 10:06:42 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Compiling FreeMarker template "invoice_foreign.html"["en_US",UTF-8,parsed]  from "jar:file:/home/sbaldin/workspace/employer_reports/build/install/invoicer-shadow/lib/invoicer-0.3-all.jar!/invoice_foreign.html"
[DEBUG] 24.01.2020 10:06:42 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Could not find template in cache, creating new one; id=["invoice_local.html"["en_US",UTF-8,parsed] ]
[DEBUG] 24.01.2020 10:06:42 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Compiling FreeMarker template "invoice_local.html"["en_US",UTF-8,parsed]  from "jar:file:/home/sbaldin/workspace/employer_reports/build/install/invoicer-shadow/lib/invoicer-0.3-all.jar!/invoice_local.html"
[INFO] 24.01.2020 10:06:42 [main] com.github.sbaldin.invoicer.processor.SaveAsPdfProcessor  - Following command will be executed: 
 /home/sbaldin/workspace/employer_reports/binaries/phantomjs_lin64, /home/sbaldin/workspace/employer_reports/binaries/rasterize.js, /home/sbaldin/workspace/employer_reports/filled_template-1638483089.html, /home/sbaldin/Ivan Ivanov foreign invoice.pdf
[INFO] 24.01.2020 10:06:42 [main] com.github.sbaldin.invoicer.processor.SaveAsPdfProcessor  - Following command will be executed: 
 /home/sbaldin/workspace/employer_reports/binaries/phantomjs_lin64, /home/sbaldin/workspace/employer_reports/binaries/rasterize.js, /home/sbaldin/workspace/employer_reports/filled_template1348167714.html, /home/sbaldin/Ivan Ivanov local invoice.pdf
[INFO] 24.01.2020 10:06:43 [main] com.github.sbaldin.invoicer.ApplicationKt  - Invoice generation completed.
[INFO] 24.01.2020 10:19:05 [main] com.github.sbaldin.invoicer.ApplicationKt  - Args:./build/resources/main/application.yaml
[INFO] 24.01.2020 10:19:05 [main] com.github.sbaldin.invoicer.ApplicationKt  - Application config path:./build/resources/main/application.yaml
[INFO] 24.01.2020 10:19:06 [main] com.github.sbaldin.invoicer.ApplicationKt  - Invoice generation started. 
 Application will produce full-filled pdf files with signatures.
[DEBUG] 24.01.2020 10:19:06 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Could not find template in cache, creating new one; id=["invoice_foreign.html"["en_US",UTF-8,parsed] ]
[DEBUG] 24.01.2020 10:19:06 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Compiling FreeMarker template "invoice_foreign.html"["en_US",UTF-8,parsed]  from "jar:file:/home/sbaldin/workspace/employer_reports/build/install/invoicer-shadow/lib/invoicer-0.3-all.jar!/invoice_foreign.html"
[DEBUG] 24.01.2020 10:19:06 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Could not find template in cache, creating new one; id=["invoice_local.html"["en_US",UTF-8,parsed] ]
[DEBUG] 24.01.2020 10:19:06 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Compiling FreeMarker template "invoice_local.html"["en_US",UTF-8,parsed]  from "jar:file:/home/sbaldin/workspace/employer_reports/build/install/invoicer-shadow/lib/invoicer-0.3-all.jar!/invoice_local.html"
[INFO] 24.01.2020 10:19:06 [main] com.github.sbaldin.invoicer.processor.SaveAsPdfProcessor  - Following command will be executed: 
 /home/sbaldin/workspace/employer_reports/binaries/phantomjs_lin64, /home/sbaldin/workspace/employer_reports/binaries/rasterize.js, /home/sbaldin/workspace/employer_reports/filled_template-1151392915.html, /home/sbaldin/Ivan Ivanov foreign invoice.pdf
[INFO] 24.01.2020 10:19:06 [main] com.github.sbaldin.invoicer.processor.SaveAsPdfProcessor  - Following command will be executed: 
 /home/sbaldin/workspace/employer_reports/binaries/phantomjs_lin64, /home/sbaldin/workspace/employer_reports/binaries/rasterize.js, /home/sbaldin/workspace/employer_reports/filled_template-1510471041.html, /home/sbaldin/Ivan Ivanov local invoice.pdf
[INFO] 24.01.2020 10:19:06 [main] com.github.sbaldin.invoicer.ApplicationKt  - Invoice generation completed.
[INFO] 24.01.2020 10:20:59 [main] com.github.sbaldin.invoicer.ApplicationKt  - Args:./build/resources/main/application.yaml
[INFO] 24.01.2020 10:20:59 [main] com.github.sbaldin.invoicer.ApplicationKt  - Application config path:./build/resources/main/application.yaml
[INFO] 24.01.2020 10:21:00 [main] com.github.sbaldin.invoicer.ApplicationKt  - Invoice generation started. 
 Application will produce full-filled pdf files with signatures.
[DEBUG] 24.01.2020 10:21:00 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Could not find template in cache, creating new one; id=["invoice_foreign.html"["en_US",UTF-8,parsed] ]
[DEBUG] 24.01.2020 10:21:00 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Compiling FreeMarker template "invoice_foreign.html"["en_US",UTF-8,parsed]  from "jar:file:/home/sbaldin/workspace/employer_reports/build/install/invoicer-shadow/lib/invoicer-0.3-all.jar!/invoice_foreign.html"
[DEBUG] 24.01.2020 10:21:00 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Could not find template in cache, creating new one; id=["invoice_local.html"["en_US",UTF-8,parsed] ]
[DEBUG] 24.01.2020 10:21:00 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Compiling FreeMarker template "invoice_local.html"["en_US",UTF-8,parsed]  from "jar:file:/home/sbaldin/workspace/employer_reports/build/install/invoicer-shadow/lib/invoicer-0.3-all.jar!/invoice_local.html"
[INFO] 24.01.2020 10:21:00 [main] com.github.sbaldin.invoicer.processor.SaveAsPdfProcessor  - Following command will be executed: 
 /home/sbaldin/workspace/employer_reports/binaries/phantomjs_lin64, /home/sbaldin/workspace/employer_reports/binaries/rasterize.js, /home/sbaldin/workspace/employer_reports/filled_template1813294215.html, /home/sbaldin/Ivan Ivanov foreign invoice.pdf
[INFO] 24.01.2020 10:21:00 [main] com.github.sbaldin.invoicer.processor.SaveAsPdfProcessor  - Following command will be executed: 
 /home/sbaldin/workspace/employer_reports/binaries/phantomjs_lin64, /home/sbaldin/workspace/employer_reports/binaries/rasterize.js, /home/sbaldin/workspace/employer_reports/filled_template575634567.html, /home/sbaldin/Ivan Ivanov local invoice.pdf
[INFO] 24.01.2020 10:21:00 [main] com.github.sbaldin.invoicer.ApplicationKt  - Invoice generation completed.
[INFO] 25.01.2020 16:13:43 [main] com.github.sbaldin.invoicer.ApplicationKt  - Args:./build/resources/main/application.yaml
[INFO] 25.01.2020 16:13:43 [main] com.github.sbaldin.invoicer.ApplicationKt  - Application config path:./build/resources/main/application.yaml
[INFO] 25.01.2020 16:13:43 [main] com.github.sbaldin.invoicer.ApplicationKt  - Invoice generation started. 
 Application will produce full-filled pdf files with signatures.
[DEBUG] 25.01.2020 16:13:43 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Could not find template in cache, creating new one; id=["invoice_foreign.html"["en_US",UTF-8,parsed] ]
[DEBUG] 25.01.2020 16:13:43 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Compiling FreeMarker template "invoice_foreign.html"["en_US",UTF-8,parsed]  from "jar:file:/home/sbaldin/workspace/employer_reports/build/install/invoicer-shadow/lib/invoicer-0.3-all.jar!/invoice_foreign.html"
[DEBUG] 25.01.2020 16:13:43 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Could not find template in cache, creating new one; id=["invoice_local.html"["en_US",UTF-8,parsed] ]
[DEBUG] 25.01.2020 16:13:43 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Compiling FreeMarker template "invoice_local.html"["en_US",UTF-8,parsed]  from "jar:file:/home/sbaldin/workspace/employer_reports/build/install/invoicer-shadow/lib/invoicer-0.3-all.jar!/invoice_local.html"
[INFO] 25.01.2020 16:13:43 [main] com.github.sbaldin.invoicer.processor.SaveAsPdfProcessor  - Following command will be executed: 
 /home/sbaldin/workspace/employer_reports/binaries/phantomjs_lin64, /home/sbaldin/workspace/employer_reports/binaries/rasterize.js, /home/sbaldin/workspace/employer_reports/filled_template28814721.html, /home/sbaldin/Ivan Ivanov foreign invoice.pdf
[INFO] 25.01.2020 16:13:44 [main] com.github.sbaldin.invoicer.processor.SaveAsPdfProcessor  - Following command will be executed: 
 /home/sbaldin/workspace/employer_reports/binaries/phantomjs_lin64, /home/sbaldin/workspace/employer_reports/binaries/rasterize.js, /home/sbaldin/workspace/employer_reports/filled_template946150922.html, /home/sbaldin/Ivan Ivanov local invoice.pdf
[INFO] 25.01.2020 16:13:44 [main] com.github.sbaldin.invoicer.ApplicationKt  - Invoice generation completed.
[INFO] 25.01.2020 16:33:21 [main] com.github.sbaldin.invoicer.ApplicationKt  - Args:./build/resources/main/application.yaml
[INFO] 25.01.2020 16:33:21 [main] com.github.sbaldin.invoicer.ApplicationKt  - Application config path:./build/resources/main/application.yaml
[INFO] 25.01.2020 16:33:22 [main] com.github.sbaldin.invoicer.ApplicationKt  - Invoice generation started. 
 Application will produce full-filled pdf files with signatures.
[DEBUG] 25.01.2020 16:33:22 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Could not find template in cache, creating new one; id=["invoice_foreign.html"["en_US",UTF-8,parsed] ]
[DEBUG] 25.01.2020 16:33:22 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Compiling FreeMarker template "invoice_foreign.html"["en_US",UTF-8,parsed]  from "jar:file:/home/sbaldin/workspace/employer_reports/build/install/invoicer-shadow/lib/invoicer-0.3-all.jar!/invoice_foreign.html"
[DEBUG] 25.01.2020 16:33:22 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Could not find template in cache, creating new one; id=["invoice_local.html"["en_US",UTF-8,parsed] ]
[DEBUG] 25.01.2020 16:33:22 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Compiling FreeMarker template "invoice_local.html"["en_US",UTF-8,parsed]  from "jar:file:/home/sbaldin/workspace/employer_reports/build/install/invoicer-shadow/lib/invoicer-0.3-all.jar!/invoice_local.html"
[INFO] 25.01.2020 16:33:22 [main] com.github.sbaldin.invoicer.processor.SaveAsPdfProcessor  - Following command will be executed: 
 /home/sbaldin/workspace/employer_reports/binaries/phantomjs_lin64, /home/sbaldin/workspace/employer_reports/binaries/rasterize.js, /home/sbaldin/workspace/employer_reports/filled_template1378171741.html, /home/sbaldin/Ivan Ivanov foreign invoice.pdf
[INFO] 25.01.2020 16:33:22 [main] com.github.sbaldin.invoicer.processor.SaveAsPdfProcessor  - Following command will be executed: 
 /home/sbaldin/workspace/employer_reports/binaries/phantomjs_lin64, /home/sbaldin/workspace/employer_reports/binaries/rasterize.js, /home/sbaldin/workspace/employer_reports/filled_template-1736455010.html, /home/sbaldin/Ivan Ivanov local invoice.pdf
[INFO] 25.01.2020 16:33:23 [main] com.github.sbaldin.invoicer.ApplicationKt  - Invoice generation completed.
[INFO] 25.01.2020 16:36:32 [main] com.github.sbaldin.invoicer.ApplicationKt  - Args:
[INFO] 25.01.2020 16:36:32 [main] com.github.sbaldin.invoicer.ApplicationKt  - Application config path:
[INFO] 25.01.2020 16:37:12 [main] com.github.sbaldin.invoicer.ApplicationKt  - Args:/home/sbaldin/.invoicer/application-invoicer.yaml
[INFO] 25.01.2020 16:37:12 [main] com.github.sbaldin.invoicer.ApplicationKt  - Application config path:/home/sbaldin/.invoicer/application-invoicer.yaml
[INFO] 25.01.2020 16:37:13 [main] com.github.sbaldin.invoicer.ApplicationKt  - Invoice generation started. 
 Application will produce full-filled pdf files with signatures.
[DEBUG] 25.01.2020 16:37:13 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Could not find template in cache, creating new one; id=["invoice_foreign.html"["en_US",UTF-8,parsed] ]
[DEBUG] 25.01.2020 16:37:13 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Compiling FreeMarker template "invoice_foreign.html"["en_US",UTF-8,parsed]  from "jar:file:/home/sbaldin/workspace/employer_reports/build/install/invoicer-shadow/lib/invoicer-0.3-all.jar!/invoice_foreign.html"
[DEBUG] 25.01.2020 16:37:13 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Could not find template in cache, creating new one; id=["invoice_local.html"["en_US",UTF-8,parsed] ]
[DEBUG] 25.01.2020 16:37:13 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Compiling FreeMarker template "invoice_local.html"["en_US",UTF-8,parsed]  from "jar:file:/home/sbaldin/workspace/employer_reports/build/install/invoicer-shadow/lib/invoicer-0.3-all.jar!/invoice_local.html"
[INFO] 25.01.2020 16:37:13 [main] com.github.sbaldin.invoicer.processor.SaveAsPdfProcessor  - Following command will be executed: 
 /home/sbaldin/workspace/employer_reports/binaries/phantomjs_lin64, /home/sbaldin/workspace/employer_reports/binaries/rasterize.js, /home/sbaldin/workspace/employer_reports/filled_template-1237540867.html, /home/sbaldin/Ivan Ivanov foreign invoice.pdf
[INFO] 25.01.2020 16:37:13 [main] com.github.sbaldin.invoicer.processor.SaveAsPdfProcessor  - Following command will be executed: 
 /home/sbaldin/workspace/employer_reports/binaries/phantomjs_lin64, /home/sbaldin/workspace/employer_reports/binaries/rasterize.js, /home/sbaldin/workspace/employer_reports/filled_template8801635.html, /home/sbaldin/Ivan Ivanov local invoice.pdf
[INFO] 25.01.2020 16:37:14 [main] com.github.sbaldin.invoicer.ApplicationKt  - Invoice generation completed.
[INFO] 27.01.2020 11:17:55 [main] com.github.sbaldin.invoicer.ApplicationKt  - Args:/home/sbaldin/.invoicer/application-invoicer.yaml
[INFO] 27.01.2020 11:17:55 [main] com.github.sbaldin.invoicer.ApplicationKt  - Application config path:/home/sbaldin/.invoicer/application-invoicer.yaml
[INFO] 27.01.2020 11:17:55 [main] com.github.sbaldin.invoicer.ApplicationKt  - Invoice generation started. 
 Application will produce full-filled pdf files with signatures.
[DEBUG] 27.01.2020 11:17:55 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Could not find template in cache, creating new one; id=["invoice_foreign.html"["en_US",UTF-8,parsed] ]
[DEBUG] 27.01.2020 11:17:55 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Compiling FreeMarker template "invoice_foreign.html"["en_US",UTF-8,parsed]  from "jar:file:/home/sbaldin/workspace/employer_reports/build/install/invoicer-shadow/lib/invoicer-0.3-all.jar!/invoice_foreign.html"
[DEBUG] 27.01.2020 11:17:55 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Could not find template in cache, creating new one; id=["invoice_local.html"["en_US",UTF-8,parsed] ]
[DEBUG] 27.01.2020 11:17:55 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Compiling FreeMarker template "invoice_local.html"["en_US",UTF-8,parsed]  from "jar:file:/home/sbaldin/workspace/employer_reports/build/install/invoicer-shadow/lib/invoicer-0.3-all.jar!/invoice_local.html"
[INFO] 27.01.2020 11:17:55 [main] com.github.sbaldin.invoicer.processor.SaveAsPdfProcessor  - Following command will be executed: 
 /home/sbaldin/workspace/employer_reports/binaries/phantomjs_lin64, /home/sbaldin/workspace/employer_reports/binaries/rasterize.js, /home/sbaldin/workspace/employer_reports/filled_template-1466687145.html, /home/sbaldin/Ivan Ivanov foreign invoice.pdf
[INFO] 27.01.2020 11:17:56 [main] com.github.sbaldin.invoicer.processor.SaveAsPdfProcessor  - Following command will be executed: 
 /home/sbaldin/workspace/employer_reports/binaries/phantomjs_lin64, /home/sbaldin/workspace/employer_reports/binaries/rasterize.js, /home/sbaldin/workspace/employer_reports/filled_template1760219973.html, /home/sbaldin/Ivan Ivanov local invoice.pdf
[INFO] 27.01.2020 11:17:56 [main] com.github.sbaldin.invoicer.ApplicationKt  - Invoice generation completed.
[INFO] 27.01.2020 11:22:11 [main] com.github.sbaldin.invoicer.ApplicationKt  - Args:./build/resources/main/application.yaml
[INFO] 27.01.2020 11:22:11 [main] com.github.sbaldin.invoicer.ApplicationKt  - Application config path:./build/resources/main/application.yaml
[INFO] 27.01.2020 11:22:12 [main] com.github.sbaldin.invoicer.ApplicationKt  - Invoice generation started. 
 Application will produce full-filled pdf files with signatures.
[DEBUG] 27.01.2020 11:22:12 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Could not find template in cache, creating new one; id=["invoice_foreign.html"["en_US",UTF-8,parsed] ]
[DEBUG] 27.01.2020 11:22:12 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Compiling FreeMarker template "invoice_foreign.html"["en_US",UTF-8,parsed]  from "jar:file:/home/sbaldin/workspace/employer_reports/build/install/invoicer-shadow/lib/invoicer-0.3-all.jar!/invoice_foreign.html"
[DEBUG] 27.01.2020 11:22:12 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Key "invoiceDate" was not found on instance of com.github.sbaldin.invoicer.domain.EmployeeDetailsModel. Introspection information for the class is: {component1=public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.component1(), component2=public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.component2(), getClass=public final native java.lang.Class java.lang.Object.getClass(), contractDate=java.beans.PropertyDescriptor[name=contractDate; propertyType=class java.util.Date; readMethod=public final java.util.Date com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getContractDate()], component3=public final java.util.Date com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.component3(), getName=public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getName(), getContractDate=public final java.util.Date com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getContractDate(), component4=public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.component4(), monthRate=java.beans.PropertyDescriptor[name=monthRate; propertyType=int; readMethod=public final int com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getMonthRate()], copy$default=public static com.github.sbaldin.invoicer.domain.EmployeeDetailsModel com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.copy$default(com.github.sbaldin.invoicer.domain.EmployeeDetailsModel,java.lang.String,java.lang.String,java.util.Date,java.lang.String,int,int,int,int,int,java.lang.Object), vacationDaysInMonth=java.beans.PropertyDescriptor[name=vacationDaysInMonth; propertyType=int; readMethod=public final int com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getVacationDaysInMonth()], component5=public final int com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.component5(), getVacationDaysInYear=public final int com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getVacationDaysInYear(), getInvoiceNumber=public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getInvoiceNumber(), component6=public final int com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.component6(), signPath=java.beans.PropertyDescriptor[name=signPath; propertyType=class java.lang.String; readMethod=public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getSignPath()], component7=public final int com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.component7(), component8=public final int com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.component8(), getDateOfService=public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getDateOfService(java.util.Locale), hashCode=public int com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.hashCode(), invoiceNumber=java.beans.PropertyDescriptor[name=invoiceNumber; propertyType=class java.lang.String; readMethod=public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getInvoiceNumber()], copy=public final com.github.sbaldin.invoicer.domain.EmployeeDetailsModel com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.copy(java.lang.String,java.lang.String,java.util.Date,java.lang.String,int,int,int,int), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], getSignPath=public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getSignPath(), formattedContractDate=public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.formattedContractDate(), formattedPaymentDeadline=public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.formattedPaymentDeadline(java.util.Locale), getAdditionalExpenses=public final int com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getAdditionalExpenses(), java.lang.Object@630cb4a4=freemarker.ext.beans.SimpleMemberModel@674c583e, getVacationDaysInMonth=public final int com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getVacationDaysInMonth(), getServiceProvider=public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getServiceProvider(), vacationDaysInYear=java.beans.PropertyDescriptor[name=vacationDaysInYear; propertyType=int; readMethod=public final int com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getVacationDaysInYear()], formattedInvoiceDate=public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.formattedInvoiceDate(java.util.Locale), java.lang.Object@4721d212={public final java.util.Date com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.component3()=[Ljava.lang.Class;@25f7391e, public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getName()=[Ljava.lang.Class;@3f23a3a0, public final java.util.Date com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getContractDate()=[Ljava.lang.Class;@5ab14cb9, public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.component4()=[Ljava.lang.Class;@5fb97279, public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.component1()=[Ljava.lang.Class;@439a8f59, public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.component2()=[Ljava.lang.Class;@61861a29, public static com.github.sbaldin.invoicer.domain.EmployeeDetailsModel com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.copy$default(com.github.sbaldin.invoicer.domain.EmployeeDetailsModel,java.lang.String,java.lang.String,java.util.Date,java.lang.String,int,int,int,int,int,java.lang.Object)=[Ljava.lang.Class;@31024624, public final int com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.component7()=[Ljava.lang.Class;@25bcd0c7, public final int com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.component8()=[Ljava.lang.Class;@32cb636e, public final int com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.component5()=[Ljava.lang.Class;@63cd604c, public final int com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getVacationDaysInYear()=[Ljava.lang.Class;@40dd3977, public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getInvoiceNumber()=[Ljava.lang.Class;@3a4e343, public final int com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.component6()=[Ljava.lang.Class;@6a1d204a, public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getDateOfService(java.util.Locale)=[Ljava.lang.Class;@62dae245, public int com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.hashCode()=[Ljava.lang.Class;@4b6579e8, public final com.github.sbaldin.invoicer.domain.EmployeeDetailsModel com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.copy(java.lang.String,java.lang.String,java.util.Date,java.lang.String,int,int,int,int)=[Ljava.lang.Class;@6fff253c, public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getSignPath()=[Ljava.lang.Class;@6c6357f9, public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.formattedPaymentDeadline(java.util.Locale)=[Ljava.lang.Class;@591e58fa, public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.formattedContractDate()=[Ljava.lang.Class;@3954d008, public final int com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getAdditionalExpenses()=[Ljava.lang.Class;@2f94c4db, public final int com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getVacationDaysInMonth()=[Ljava.lang.Class;@593e824f, public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.formattedInvoiceDate(java.util.Locale)=[Ljava.lang.Class;@72ccd81a, public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getServiceProvider()=[Ljava.lang.Class;@6d8792db, public boolean com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.equals(java.lang.Object)=[Ljava.lang.Class;@64bc21ac, public java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.toString()=[Ljava.lang.Class;@493dfb8e, public final int com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getMonthRate()=[Ljava.lang.Class;@5d25e6bb, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@ce5a68e}, additionalExpenses=java.beans.PropertyDescriptor[name=additionalExpenses; propertyType=int; readMethod=public final int com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getAdditionalExpenses()], equals=public boolean com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.equals(java.lang.Object), serviceProvider=java.beans.PropertyDescriptor[name=serviceProvider; propertyType=class java.lang.String; readMethod=public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getServiceProvider()], name=java.beans.PropertyDescriptor[name=name; propertyType=class java.lang.String; readMethod=public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getName()], getMonthRate=public final int com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getMonthRate(), toString=public java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.toString()}
[DEBUG] 27.01.2020 11:22:12 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Key "invoiceDate" was not found on instance of com.github.sbaldin.invoicer.domain.EmployeeDetailsModel. Introspection information for the class is: {component1=public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.component1(), component2=public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.component2(), getClass=public final native java.lang.Class java.lang.Object.getClass(), contractDate=java.beans.PropertyDescriptor[name=contractDate; propertyType=class java.util.Date; readMethod=public final java.util.Date com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getContractDate()], component3=public final java.util.Date com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.component3(), getName=public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getName(), getContractDate=public final java.util.Date com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getContractDate(), component4=public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.component4(), monthRate=java.beans.PropertyDescriptor[name=monthRate; propertyType=int; readMethod=public final int com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getMonthRate()], copy$default=public static com.github.sbaldin.invoicer.domain.EmployeeDetailsModel com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.copy$default(com.github.sbaldin.invoicer.domain.EmployeeDetailsModel,java.lang.String,java.lang.String,java.util.Date,java.lang.String,int,int,int,int,int,java.lang.Object), vacationDaysInMonth=java.beans.PropertyDescriptor[name=vacationDaysInMonth; propertyType=int; readMethod=public final int com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getVacationDaysInMonth()], component5=public final int com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.component5(), getVacationDaysInYear=public final int com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getVacationDaysInYear(), getInvoiceNumber=public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getInvoiceNumber(), component6=public final int com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.component6(), signPath=java.beans.PropertyDescriptor[name=signPath; propertyType=class java.lang.String; readMethod=public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getSignPath()], component7=public final int com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.component7(), component8=public final int com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.component8(), getDateOfService=public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getDateOfService(java.util.Locale), hashCode=public int com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.hashCode(), invoiceNumber=java.beans.PropertyDescriptor[name=invoiceNumber; propertyType=class java.lang.String; readMethod=public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getInvoiceNumber()], copy=public final com.github.sbaldin.invoicer.domain.EmployeeDetailsModel com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.copy(java.lang.String,java.lang.String,java.util.Date,java.lang.String,int,int,int,int), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], getSignPath=public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getSignPath(), formattedContractDate=public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.formattedContractDate(), formattedPaymentDeadline=public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.formattedPaymentDeadline(java.util.Locale), getAdditionalExpenses=public final int com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getAdditionalExpenses(), java.lang.Object@630cb4a4=freemarker.ext.beans.SimpleMemberModel@674c583e, getVacationDaysInMonth=public final int com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getVacationDaysInMonth(), getServiceProvider=public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getServiceProvider(), vacationDaysInYear=java.beans.PropertyDescriptor[name=vacationDaysInYear; propertyType=int; readMethod=public final int com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getVacationDaysInYear()], formattedInvoiceDate=public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.formattedInvoiceDate(java.util.Locale), java.lang.Object@4721d212={public final java.util.Date com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.component3()=[Ljava.lang.Class;@25f7391e, public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getName()=[Ljava.lang.Class;@3f23a3a0, public final java.util.Date com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getContractDate()=[Ljava.lang.Class;@5ab14cb9, public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.component4()=[Ljava.lang.Class;@5fb97279, public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.component1()=[Ljava.lang.Class;@439a8f59, public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.component2()=[Ljava.lang.Class;@61861a29, public static com.github.sbaldin.invoicer.domain.EmployeeDetailsModel com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.copy$default(com.github.sbaldin.invoicer.domain.EmployeeDetailsModel,java.lang.String,java.lang.String,java.util.Date,java.lang.String,int,int,int,int,int,java.lang.Object)=[Ljava.lang.Class;@31024624, public final int com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.component7()=[Ljava.lang.Class;@25bcd0c7, public final int com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.component8()=[Ljava.lang.Class;@32cb636e, public final int com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.component5()=[Ljava.lang.Class;@63cd604c, public final int com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getVacationDaysInYear()=[Ljava.lang.Class;@40dd3977, public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getInvoiceNumber()=[Ljava.lang.Class;@3a4e343, public final int com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.component6()=[Ljava.lang.Class;@6a1d204a, public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getDateOfService(java.util.Locale)=[Ljava.lang.Class;@62dae245, public int com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.hashCode()=[Ljava.lang.Class;@4b6579e8, public final com.github.sbaldin.invoicer.domain.EmployeeDetailsModel com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.copy(java.lang.String,java.lang.String,java.util.Date,java.lang.String,int,int,int,int)=[Ljava.lang.Class;@6fff253c, public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getSignPath()=[Ljava.lang.Class;@6c6357f9, public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.formattedPaymentDeadline(java.util.Locale)=[Ljava.lang.Class;@591e58fa, public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.formattedContractDate()=[Ljava.lang.Class;@3954d008, public final int com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getAdditionalExpenses()=[Ljava.lang.Class;@2f94c4db, public final int com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getVacationDaysInMonth()=[Ljava.lang.Class;@593e824f, public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.formattedInvoiceDate(java.util.Locale)=[Ljava.lang.Class;@72ccd81a, public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getServiceProvider()=[Ljava.lang.Class;@6d8792db, public boolean com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.equals(java.lang.Object)=[Ljava.lang.Class;@64bc21ac, public java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.toString()=[Ljava.lang.Class;@493dfb8e, public final int com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getMonthRate()=[Ljava.lang.Class;@5d25e6bb, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@ce5a68e}, additionalExpenses=java.beans.PropertyDescriptor[name=additionalExpenses; propertyType=int; readMethod=public final int com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getAdditionalExpenses()], equals=public boolean com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.equals(java.lang.Object), serviceProvider=java.beans.PropertyDescriptor[name=serviceProvider; propertyType=class java.lang.String; readMethod=public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getServiceProvider()], name=java.beans.PropertyDescriptor[name=name; propertyType=class java.lang.String; readMethod=public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getName()], getMonthRate=public final int com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getMonthRate(), toString=public java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.toString()}
[ERROR] 27.01.2020 11:22:12 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Error executing FreeMarker template
FreeMarker template error:
The following has evaluated to null or missing:
==> employee.invoiceDate  [in template "invoice_foreign.html" at line 109, column 15]

Tip: If the failing expression is known to be legally null/missing, either specify a default value with myOptionalVar!myDefault, or use <#if myOptionalVar??>when-present<#else>when-missing</#if>. (These only cover the last step of the expression; to cover the whole expression, use parenthessis: (myOptionVar.foo)!myDefault, (myOptionVar.foo)??

The failing instruction (FTL stack trace):
----------
==> ${employee.invoiceDate?date}  [in template "invoice_foreign.html" at line 109, column 13]
----------

Java stack trace (for programmers):
----------
freemarker.core.InvalidReferenceException: [... Exception message was already printed; see it above ...]
	at freemarker.core.InvalidReferenceException.getInstance(InvalidReferenceException.java:98)
	at freemarker.core.EvalUtil.coerceModelToString(EvalUtil.java:382)
	at freemarker.core.Expression.evalAndCoerceToString(Expression.java:115)
	at freemarker.core.MiscellaneousBuiltins$dateBI._eval(MiscellaneousBuiltins.java:83)
	at freemarker.core.Expression.eval(Expression.java:111)
	at freemarker.core.Expression.evalAndCoerceToString(Expression.java:115)
	at freemarker.core.DollarVariable.accept(DollarVariable.java:76)
	at freemarker.core.Environment.visit(Environment.java:265)
	at freemarker.core.MixedContent.accept(MixedContent.java:93)
	at freemarker.core.Environment.visit(Environment.java:265)
	at freemarker.core.Environment.process(Environment.java:243)
	at freemarker.template.Template.process(Template.java:277)
	at com.github.sbaldin.invoicer.generator.invoice.pdf.AbstractPdfBankInvoice.generatePdfFile(AbstractPdfBankInvoice.kt:52)
	at com.github.sbaldin.invoicer.generator.invoice.pdf.ForeignBankInvoice.generate(ForeignBankInvoice.kt:21)
	at com.github.sbaldin.invoicer.generator.InvoiceFactory.getPdfInvoiceList(InvoiceFactory.kt:69)
	at com.github.sbaldin.invoicer.ApplicationKt.main(Application.kt:63)
[INFO] 27.01.2020 11:27:53 [main] com.github.sbaldin.invoicer.ApplicationKt  - Args:./build/resources/main/application.yaml
[INFO] 27.01.2020 11:27:53 [main] com.github.sbaldin.invoicer.ApplicationKt  - Application config path:./build/resources/main/application.yaml
[INFO] 27.01.2020 11:27:54 [main] com.github.sbaldin.invoicer.ApplicationKt  - Invoice generation started. 
 Application will produce full-filled pdf files with signatures.
[DEBUG] 27.01.2020 11:27:54 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Could not find template in cache, creating new one; id=["invoice_foreign.html"["en_US",UTF-8,parsed] ]
[DEBUG] 27.01.2020 11:27:54 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Compiling FreeMarker template "invoice_foreign.html"["en_US",UTF-8,parsed]  from "jar:file:/home/sbaldin/workspace/employer_reports/build/install/invoicer-shadow/lib/invoicer-0.3-all.jar!/invoice_foreign.html"
[ERROR] 27.01.2020 11:27:54 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Error executing FreeMarker template
FreeMarker template error:
The string doesn't match the expected date/time format. The string to parse was: "01.01.1970". The expected format was: "MMM d, yyyy". 

The failing instruction (FTL stack trace):
----------
==> ${formattedContractDate?date}  [in template "invoice_foreign.html" at line 103, column 25]
----------

Java stack trace (for programmers):
----------
freemarker.core._TemplateModelException: [... Exception message was already printed; see it above ...]
	at freemarker.core.MiscellaneousBuiltins$dateBI$DateParser.parse(MiscellaneousBuiltins.java:146)
	at freemarker.core.MiscellaneousBuiltins$dateBI$DateParser.getAsDate(MiscellaneousBuiltins.java:109)
	at freemarker.core.EvalUtil.modelToDate(EvalUtil.java:120)
	at freemarker.core.EvalUtil.coerceModelToString(EvalUtil.java:374)
	at freemarker.core.Expression.evalAndCoerceToString(Expression.java:115)
	at freemarker.core.DollarVariable.accept(DollarVariable.java:76)
	at freemarker.core.Environment.visit(Environment.java:265)
	at freemarker.core.MixedContent.accept(MixedContent.java:93)
	at freemarker.core.Environment.visit(Environment.java:265)
	at freemarker.core.Environment.process(Environment.java:243)
	at freemarker.template.Template.process(Template.java:277)
	at com.github.sbaldin.invoicer.generator.invoice.pdf.AbstractPdfBankInvoice.generatePdfFile(AbstractPdfBankInvoice.kt:52)
	at com.github.sbaldin.invoicer.generator.invoice.pdf.ForeignBankInvoice.generate(ForeignBankInvoice.kt:21)
	at com.github.sbaldin.invoicer.generator.InvoiceFactory.getPdfInvoiceList(InvoiceFactory.kt:69)
	at com.github.sbaldin.invoicer.ApplicationKt.main(Application.kt:63)
[INFO] 27.01.2020 11:28:45 [main] com.github.sbaldin.invoicer.ApplicationKt  - Args:./build/resources/main/application.yaml
[INFO] 27.01.2020 11:28:45 [main] com.github.sbaldin.invoicer.ApplicationKt  - Application config path:./build/resources/main/application.yaml
[INFO] 27.01.2020 11:28:45 [main] com.github.sbaldin.invoicer.ApplicationKt  - Invoice generation started. 
 Application will produce full-filled pdf files with signatures.
[DEBUG] 27.01.2020 11:28:45 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Could not find template in cache, creating new one; id=["invoice_foreign.html"["en_US",UTF-8,parsed] ]
[DEBUG] 27.01.2020 11:28:45 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Compiling FreeMarker template "invoice_foreign.html"["en_US",UTF-8,parsed]  from "jar:file:/home/sbaldin/workspace/employer_reports/build/install/invoicer-shadow/lib/invoicer-0.3-all.jar!/invoice_foreign.html"
[DEBUG] 27.01.2020 11:28:45 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Could not find template in cache, creating new one; id=["invoice_local.html"["en_US",UTF-8,parsed] ]
[DEBUG] 27.01.2020 11:28:45 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Compiling FreeMarker template "invoice_local.html"["en_US",UTF-8,parsed]  from "jar:file:/home/sbaldin/workspace/employer_reports/build/install/invoicer-shadow/lib/invoicer-0.3-all.jar!/invoice_local.html"
[DEBUG] 27.01.2020 11:28:45 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Key "invoiceDate" was not found on instance of com.github.sbaldin.invoicer.domain.EmployeeDetailsModel. Introspection information for the class is: {component1=public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.component1(), component2=public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.component2(), getClass=public final native java.lang.Class java.lang.Object.getClass(), contractDate=java.beans.PropertyDescriptor[name=contractDate; propertyType=class java.util.Date; readMethod=public final java.util.Date com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getContractDate()], component3=public final java.util.Date com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.component3(), getName=public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getName(), getContractDate=public final java.util.Date com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getContractDate(), component4=public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.component4(), monthRate=java.beans.PropertyDescriptor[name=monthRate; propertyType=int; readMethod=public final int com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getMonthRate()], copy$default=public static com.github.sbaldin.invoicer.domain.EmployeeDetailsModel com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.copy$default(com.github.sbaldin.invoicer.domain.EmployeeDetailsModel,java.lang.String,java.lang.String,java.util.Date,java.lang.String,int,int,int,int,int,java.lang.Object), vacationDaysInMonth=java.beans.PropertyDescriptor[name=vacationDaysInMonth; propertyType=int; readMethod=public final int com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getVacationDaysInMonth()], component5=public final int com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.component5(), getVacationDaysInYear=public final int com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getVacationDaysInYear(), getInvoiceNumber=public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getInvoiceNumber(), component6=public final int com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.component6(), signPath=java.beans.PropertyDescriptor[name=signPath; propertyType=class java.lang.String; readMethod=public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getSignPath()], component7=public final int com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.component7(), component8=public final int com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.component8(), getDateOfService=public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getDateOfService(java.util.Locale), hashCode=public int com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.hashCode(), invoiceNumber=java.beans.PropertyDescriptor[name=invoiceNumber; propertyType=class java.lang.String; readMethod=public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getInvoiceNumber()], copy=public final com.github.sbaldin.invoicer.domain.EmployeeDetailsModel com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.copy(java.lang.String,java.lang.String,java.util.Date,java.lang.String,int,int,int,int), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], getSignPath=public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getSignPath(), formattedContractDate=public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.formattedContractDate(), formattedPaymentDeadline=public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.formattedPaymentDeadline(java.util.Locale), getAdditionalExpenses=public final int com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getAdditionalExpenses(), java.lang.Object@630cb4a4=freemarker.ext.beans.SimpleMemberModel@2f7a7219, getVacationDaysInMonth=public final int com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getVacationDaysInMonth(), getServiceProvider=public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getServiceProvider(), vacationDaysInYear=java.beans.PropertyDescriptor[name=vacationDaysInYear; propertyType=int; readMethod=public final int com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getVacationDaysInYear()], formattedInvoiceDate=public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.formattedInvoiceDate(java.util.Locale), java.lang.Object@4721d212={public final java.util.Date com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.component3()=[Ljava.lang.Class;@669513d8, public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getName()=[Ljava.lang.Class;@3a1d593e, public final java.util.Date com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getContractDate()=[Ljava.lang.Class;@4a8a60bc, public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.component4()=[Ljava.lang.Class;@361c294e, public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.component1()=[Ljava.lang.Class;@7859e786, public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.component2()=[Ljava.lang.Class;@285d851a, public static com.github.sbaldin.invoicer.domain.EmployeeDetailsModel com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.copy$default(com.github.sbaldin.invoicer.domain.EmployeeDetailsModel,java.lang.String,java.lang.String,java.util.Date,java.lang.String,int,int,int,int,int,java.lang.Object)=[Ljava.lang.Class;@314b8f2d, public final int com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.component7()=[Ljava.lang.Class;@664a9613, public final int com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.component8()=[Ljava.lang.Class;@5118388b, public final int com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.component5()=[Ljava.lang.Class;@15a902e7, public final int com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getVacationDaysInYear()=[Ljava.lang.Class;@7876d598, public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getInvoiceNumber()=[Ljava.lang.Class;@4a3e3e8b, public final int com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.component6()=[Ljava.lang.Class;@5af28b27, public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getDateOfService(java.util.Locale)=[Ljava.lang.Class;@71104a4, public int com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.hashCode()=[Ljava.lang.Class;@4985cbcb, public final com.github.sbaldin.invoicer.domain.EmployeeDetailsModel com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.copy(java.lang.String,java.lang.String,java.util.Date,java.lang.String,int,int,int,int)=[Ljava.lang.Class;@72f46e16, public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getSignPath()=[Ljava.lang.Class;@3c9168dc, public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.formattedPaymentDeadline(java.util.Locale)=[Ljava.lang.Class;@332a7fce, public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.formattedContractDate()=[Ljava.lang.Class;@549621f3, public final int com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getAdditionalExpenses()=[Ljava.lang.Class;@54361a9, public final int com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getVacationDaysInMonth()=[Ljava.lang.Class;@32232e55, public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.formattedInvoiceDate(java.util.Locale)=[Ljava.lang.Class;@5217f3d0, public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getServiceProvider()=[Ljava.lang.Class;@37ebc9d8, public boolean com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.equals(java.lang.Object)=[Ljava.lang.Class;@293bb8a5, public java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.toString()=[Ljava.lang.Class;@2416a51, public final int com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getMonthRate()=[Ljava.lang.Class;@6fa590ba, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@6e9319f}, additionalExpenses=java.beans.PropertyDescriptor[name=additionalExpenses; propertyType=int; readMethod=public final int com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getAdditionalExpenses()], equals=public boolean com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.equals(java.lang.Object), serviceProvider=java.beans.PropertyDescriptor[name=serviceProvider; propertyType=class java.lang.String; readMethod=public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getServiceProvider()], name=java.beans.PropertyDescriptor[name=name; propertyType=class java.lang.String; readMethod=public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getName()], getMonthRate=public final int com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getMonthRate(), toString=public java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.toString()}
[DEBUG] 27.01.2020 11:28:45 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Key "invoiceDate" was not found on instance of com.github.sbaldin.invoicer.domain.EmployeeDetailsModel. Introspection information for the class is: {component1=public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.component1(), component2=public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.component2(), getClass=public final native java.lang.Class java.lang.Object.getClass(), contractDate=java.beans.PropertyDescriptor[name=contractDate; propertyType=class java.util.Date; readMethod=public final java.util.Date com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getContractDate()], component3=public final java.util.Date com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.component3(), getName=public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getName(), getContractDate=public final java.util.Date com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getContractDate(), component4=public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.component4(), monthRate=java.beans.PropertyDescriptor[name=monthRate; propertyType=int; readMethod=public final int com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getMonthRate()], copy$default=public static com.github.sbaldin.invoicer.domain.EmployeeDetailsModel com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.copy$default(com.github.sbaldin.invoicer.domain.EmployeeDetailsModel,java.lang.String,java.lang.String,java.util.Date,java.lang.String,int,int,int,int,int,java.lang.Object), vacationDaysInMonth=java.beans.PropertyDescriptor[name=vacationDaysInMonth; propertyType=int; readMethod=public final int com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getVacationDaysInMonth()], component5=public final int com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.component5(), getVacationDaysInYear=public final int com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getVacationDaysInYear(), getInvoiceNumber=public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getInvoiceNumber(), component6=public final int com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.component6(), signPath=java.beans.PropertyDescriptor[name=signPath; propertyType=class java.lang.String; readMethod=public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getSignPath()], component7=public final int com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.component7(), component8=public final int com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.component8(), getDateOfService=public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getDateOfService(java.util.Locale), hashCode=public int com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.hashCode(), invoiceNumber=java.beans.PropertyDescriptor[name=invoiceNumber; propertyType=class java.lang.String; readMethod=public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getInvoiceNumber()], copy=public final com.github.sbaldin.invoicer.domain.EmployeeDetailsModel com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.copy(java.lang.String,java.lang.String,java.util.Date,java.lang.String,int,int,int,int), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], getSignPath=public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getSignPath(), formattedContractDate=public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.formattedContractDate(), formattedPaymentDeadline=public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.formattedPaymentDeadline(java.util.Locale), getAdditionalExpenses=public final int com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getAdditionalExpenses(), java.lang.Object@630cb4a4=freemarker.ext.beans.SimpleMemberModel@2f7a7219, getVacationDaysInMonth=public final int com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getVacationDaysInMonth(), getServiceProvider=public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getServiceProvider(), vacationDaysInYear=java.beans.PropertyDescriptor[name=vacationDaysInYear; propertyType=int; readMethod=public final int com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getVacationDaysInYear()], formattedInvoiceDate=public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.formattedInvoiceDate(java.util.Locale), java.lang.Object@4721d212={public final java.util.Date com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.component3()=[Ljava.lang.Class;@669513d8, public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getName()=[Ljava.lang.Class;@3a1d593e, public final java.util.Date com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getContractDate()=[Ljava.lang.Class;@4a8a60bc, public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.component4()=[Ljava.lang.Class;@361c294e, public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.component1()=[Ljava.lang.Class;@7859e786, public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.component2()=[Ljava.lang.Class;@285d851a, public static com.github.sbaldin.invoicer.domain.EmployeeDetailsModel com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.copy$default(com.github.sbaldin.invoicer.domain.EmployeeDetailsModel,java.lang.String,java.lang.String,java.util.Date,java.lang.String,int,int,int,int,int,java.lang.Object)=[Ljava.lang.Class;@314b8f2d, public final int com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.component7()=[Ljava.lang.Class;@664a9613, public final int com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.component8()=[Ljava.lang.Class;@5118388b, public final int com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.component5()=[Ljava.lang.Class;@15a902e7, public final int com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getVacationDaysInYear()=[Ljava.lang.Class;@7876d598, public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getInvoiceNumber()=[Ljava.lang.Class;@4a3e3e8b, public final int com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.component6()=[Ljava.lang.Class;@5af28b27, public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getDateOfService(java.util.Locale)=[Ljava.lang.Class;@71104a4, public int com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.hashCode()=[Ljava.lang.Class;@4985cbcb, public final com.github.sbaldin.invoicer.domain.EmployeeDetailsModel com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.copy(java.lang.String,java.lang.String,java.util.Date,java.lang.String,int,int,int,int)=[Ljava.lang.Class;@72f46e16, public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getSignPath()=[Ljava.lang.Class;@3c9168dc, public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.formattedPaymentDeadline(java.util.Locale)=[Ljava.lang.Class;@332a7fce, public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.formattedContractDate()=[Ljava.lang.Class;@549621f3, public final int com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getAdditionalExpenses()=[Ljava.lang.Class;@54361a9, public final int com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getVacationDaysInMonth()=[Ljava.lang.Class;@32232e55, public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.formattedInvoiceDate(java.util.Locale)=[Ljava.lang.Class;@5217f3d0, public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getServiceProvider()=[Ljava.lang.Class;@37ebc9d8, public boolean com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.equals(java.lang.Object)=[Ljava.lang.Class;@293bb8a5, public java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.toString()=[Ljava.lang.Class;@2416a51, public final int com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getMonthRate()=[Ljava.lang.Class;@6fa590ba, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@6e9319f}, additionalExpenses=java.beans.PropertyDescriptor[name=additionalExpenses; propertyType=int; readMethod=public final int com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getAdditionalExpenses()], equals=public boolean com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.equals(java.lang.Object), serviceProvider=java.beans.PropertyDescriptor[name=serviceProvider; propertyType=class java.lang.String; readMethod=public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getServiceProvider()], name=java.beans.PropertyDescriptor[name=name; propertyType=class java.lang.String; readMethod=public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getName()], getMonthRate=public final int com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getMonthRate(), toString=public java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.toString()}
[ERROR] 27.01.2020 11:28:45 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Error executing FreeMarker template
FreeMarker template error:
The following has evaluated to null or missing:
==> employee.invoiceDate  [in template "invoice_local.html" at line 103, column 45]

Tip: If the failing expression is known to be legally null/missing, either specify a default value with myOptionalVar!myDefault, or use <#if myOptionalVar??>when-present<#else>when-missing</#if>. (These only cover the last step of the expression; to cover the whole expression, use parenthessis: (myOptionVar.foo)!myDefault, (myOptionVar.foo)??

The failing instruction (FTL stack trace):
----------
==> ${employee.invoiceDate?date}  [in template "invoice_local.html" at line 103, column 43]
----------

Java stack trace (for programmers):
----------
freemarker.core.InvalidReferenceException: [... Exception message was already printed; see it above ...]
	at freemarker.core.InvalidReferenceException.getInstance(InvalidReferenceException.java:98)
	at freemarker.core.EvalUtil.coerceModelToString(EvalUtil.java:382)
	at freemarker.core.Expression.evalAndCoerceToString(Expression.java:115)
	at freemarker.core.MiscellaneousBuiltins$dateBI._eval(MiscellaneousBuiltins.java:83)
	at freemarker.core.Expression.eval(Expression.java:111)
	at freemarker.core.Expression.evalAndCoerceToString(Expression.java:115)
	at freemarker.core.DollarVariable.accept(DollarVariable.java:76)
	at freemarker.core.Environment.visit(Environment.java:265)
	at freemarker.core.MixedContent.accept(MixedContent.java:93)
	at freemarker.core.Environment.visit(Environment.java:265)
	at freemarker.core.Environment.process(Environment.java:243)
	at freemarker.template.Template.process(Template.java:277)
	at com.github.sbaldin.invoicer.generator.invoice.pdf.AbstractPdfBankInvoice.generatePdfFile(AbstractPdfBankInvoice.kt:52)
	at com.github.sbaldin.invoicer.generator.invoice.pdf.LocalBankInvoice.generate(LocalBankInvoice.kt:28)
	at com.github.sbaldin.invoicer.generator.InvoiceFactory.getPdfInvoiceList(InvoiceFactory.kt:75)
	at com.github.sbaldin.invoicer.ApplicationKt.main(Application.kt:63)
[INFO] 27.01.2020 11:29:26 [main] com.github.sbaldin.invoicer.ApplicationKt  - Args:./build/resources/main/application.yaml
[INFO] 27.01.2020 11:29:26 [main] com.github.sbaldin.invoicer.ApplicationKt  - Application config path:./build/resources/main/application.yaml
[INFO] 27.01.2020 11:29:26 [main] com.github.sbaldin.invoicer.ApplicationKt  - Invoice generation started. 
 Application will produce full-filled pdf files with signatures.
[DEBUG] 27.01.2020 11:29:26 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Could not find template in cache, creating new one; id=["invoice_foreign.html"["en_US",UTF-8,parsed] ]
[DEBUG] 27.01.2020 11:29:26 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Compiling FreeMarker template "invoice_foreign.html"["en_US",UTF-8,parsed]  from "jar:file:/home/sbaldin/workspace/employer_reports/build/install/invoicer-shadow/lib/invoicer-0.3-all.jar!/invoice_foreign.html"
[DEBUG] 27.01.2020 11:29:26 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Could not find template in cache, creating new one; id=["invoice_local.html"["en_US",UTF-8,parsed] ]
[DEBUG] 27.01.2020 11:29:26 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Compiling FreeMarker template "invoice_local.html"["en_US",UTF-8,parsed]  from "jar:file:/home/sbaldin/workspace/employer_reports/build/install/invoicer-shadow/lib/invoicer-0.3-all.jar!/invoice_local.html"
[DEBUG] 27.01.2020 11:29:26 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Key "invoiceDate" was not found on instance of com.github.sbaldin.invoicer.domain.EmployeeDetailsModel. Introspection information for the class is: {component1=public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.component1(), component2=public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.component2(), getClass=public final native java.lang.Class java.lang.Object.getClass(), contractDate=java.beans.PropertyDescriptor[name=contractDate; propertyType=class java.util.Date; readMethod=public final java.util.Date com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getContractDate()], component3=public final java.util.Date com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.component3(), getName=public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getName(), getContractDate=public final java.util.Date com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getContractDate(), component4=public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.component4(), monthRate=java.beans.PropertyDescriptor[name=monthRate; propertyType=int; readMethod=public final int com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getMonthRate()], copy$default=public static com.github.sbaldin.invoicer.domain.EmployeeDetailsModel com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.copy$default(com.github.sbaldin.invoicer.domain.EmployeeDetailsModel,java.lang.String,java.lang.String,java.util.Date,java.lang.String,int,int,int,int,int,java.lang.Object), vacationDaysInMonth=java.beans.PropertyDescriptor[name=vacationDaysInMonth; propertyType=int; readMethod=public final int com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getVacationDaysInMonth()], component5=public final int com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.component5(), getVacationDaysInYear=public final int com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getVacationDaysInYear(), getInvoiceNumber=public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getInvoiceNumber(), component6=public final int com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.component6(), signPath=java.beans.PropertyDescriptor[name=signPath; propertyType=class java.lang.String; readMethod=public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getSignPath()], component7=public final int com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.component7(), component8=public final int com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.component8(), getDateOfService=public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getDateOfService(java.util.Locale), hashCode=public int com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.hashCode(), invoiceNumber=java.beans.PropertyDescriptor[name=invoiceNumber; propertyType=class java.lang.String; readMethod=public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getInvoiceNumber()], copy=public final com.github.sbaldin.invoicer.domain.EmployeeDetailsModel com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.copy(java.lang.String,java.lang.String,java.util.Date,java.lang.String,int,int,int,int), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], getSignPath=public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getSignPath(), formattedContractDate=public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.formattedContractDate(), formattedPaymentDeadline=public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.formattedPaymentDeadline(java.util.Locale), getAdditionalExpenses=public final int com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getAdditionalExpenses(), java.lang.Object@630cb4a4=freemarker.ext.beans.SimpleMemberModel@2f7a7219, getVacationDaysInMonth=public final int com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getVacationDaysInMonth(), getServiceProvider=public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getServiceProvider(), vacationDaysInYear=java.beans.PropertyDescriptor[name=vacationDaysInYear; propertyType=int; readMethod=public final int com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getVacationDaysInYear()], formattedInvoiceDate=public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.formattedInvoiceDate(java.util.Locale), java.lang.Object@4721d212={public final java.util.Date com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.component3()=[Ljava.lang.Class;@669513d8, public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getName()=[Ljava.lang.Class;@3a1d593e, public final java.util.Date com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getContractDate()=[Ljava.lang.Class;@4a8a60bc, public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.component4()=[Ljava.lang.Class;@361c294e, public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.component1()=[Ljava.lang.Class;@7859e786, public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.component2()=[Ljava.lang.Class;@285d851a, public static com.github.sbaldin.invoicer.domain.EmployeeDetailsModel com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.copy$default(com.github.sbaldin.invoicer.domain.EmployeeDetailsModel,java.lang.String,java.lang.String,java.util.Date,java.lang.String,int,int,int,int,int,java.lang.Object)=[Ljava.lang.Class;@314b8f2d, public final int com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.component7()=[Ljava.lang.Class;@664a9613, public final int com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.component8()=[Ljava.lang.Class;@5118388b, public final int com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.component5()=[Ljava.lang.Class;@15a902e7, public final int com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getVacationDaysInYear()=[Ljava.lang.Class;@7876d598, public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getInvoiceNumber()=[Ljava.lang.Class;@4a3e3e8b, public final int com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.component6()=[Ljava.lang.Class;@5af28b27, public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getDateOfService(java.util.Locale)=[Ljava.lang.Class;@71104a4, public int com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.hashCode()=[Ljava.lang.Class;@4985cbcb, public final com.github.sbaldin.invoicer.domain.EmployeeDetailsModel com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.copy(java.lang.String,java.lang.String,java.util.Date,java.lang.String,int,int,int,int)=[Ljava.lang.Class;@72f46e16, public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getSignPath()=[Ljava.lang.Class;@3c9168dc, public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.formattedPaymentDeadline(java.util.Locale)=[Ljava.lang.Class;@332a7fce, public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.formattedContractDate()=[Ljava.lang.Class;@549621f3, public final int com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getAdditionalExpenses()=[Ljava.lang.Class;@54361a9, public final int com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getVacationDaysInMonth()=[Ljava.lang.Class;@32232e55, public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.formattedInvoiceDate(java.util.Locale)=[Ljava.lang.Class;@5217f3d0, public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getServiceProvider()=[Ljava.lang.Class;@37ebc9d8, public boolean com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.equals(java.lang.Object)=[Ljava.lang.Class;@293bb8a5, public java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.toString()=[Ljava.lang.Class;@2416a51, public final int com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getMonthRate()=[Ljava.lang.Class;@6fa590ba, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@6e9319f}, additionalExpenses=java.beans.PropertyDescriptor[name=additionalExpenses; propertyType=int; readMethod=public final int com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getAdditionalExpenses()], equals=public boolean com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.equals(java.lang.Object), serviceProvider=java.beans.PropertyDescriptor[name=serviceProvider; propertyType=class java.lang.String; readMethod=public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getServiceProvider()], name=java.beans.PropertyDescriptor[name=name; propertyType=class java.lang.String; readMethod=public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getName()], getMonthRate=public final int com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getMonthRate(), toString=public java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.toString()}
[DEBUG] 27.01.2020 11:29:26 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Key "invoiceDate" was not found on instance of com.github.sbaldin.invoicer.domain.EmployeeDetailsModel. Introspection information for the class is: {component1=public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.component1(), component2=public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.component2(), getClass=public final native java.lang.Class java.lang.Object.getClass(), contractDate=java.beans.PropertyDescriptor[name=contractDate; propertyType=class java.util.Date; readMethod=public final java.util.Date com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getContractDate()], component3=public final java.util.Date com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.component3(), getName=public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getName(), getContractDate=public final java.util.Date com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getContractDate(), component4=public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.component4(), monthRate=java.beans.PropertyDescriptor[name=monthRate; propertyType=int; readMethod=public final int com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getMonthRate()], copy$default=public static com.github.sbaldin.invoicer.domain.EmployeeDetailsModel com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.copy$default(com.github.sbaldin.invoicer.domain.EmployeeDetailsModel,java.lang.String,java.lang.String,java.util.Date,java.lang.String,int,int,int,int,int,java.lang.Object), vacationDaysInMonth=java.beans.PropertyDescriptor[name=vacationDaysInMonth; propertyType=int; readMethod=public final int com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getVacationDaysInMonth()], component5=public final int com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.component5(), getVacationDaysInYear=public final int com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getVacationDaysInYear(), getInvoiceNumber=public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getInvoiceNumber(), component6=public final int com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.component6(), signPath=java.beans.PropertyDescriptor[name=signPath; propertyType=class java.lang.String; readMethod=public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getSignPath()], component7=public final int com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.component7(), component8=public final int com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.component8(), getDateOfService=public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getDateOfService(java.util.Locale), hashCode=public int com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.hashCode(), invoiceNumber=java.beans.PropertyDescriptor[name=invoiceNumber; propertyType=class java.lang.String; readMethod=public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getInvoiceNumber()], copy=public final com.github.sbaldin.invoicer.domain.EmployeeDetailsModel com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.copy(java.lang.String,java.lang.String,java.util.Date,java.lang.String,int,int,int,int), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], getSignPath=public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getSignPath(), formattedContractDate=public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.formattedContractDate(), formattedPaymentDeadline=public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.formattedPaymentDeadline(java.util.Locale), getAdditionalExpenses=public final int com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getAdditionalExpenses(), java.lang.Object@630cb4a4=freemarker.ext.beans.SimpleMemberModel@2f7a7219, getVacationDaysInMonth=public final int com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getVacationDaysInMonth(), getServiceProvider=public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getServiceProvider(), vacationDaysInYear=java.beans.PropertyDescriptor[name=vacationDaysInYear; propertyType=int; readMethod=public final int com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getVacationDaysInYear()], formattedInvoiceDate=public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.formattedInvoiceDate(java.util.Locale), java.lang.Object@4721d212={public final java.util.Date com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.component3()=[Ljava.lang.Class;@669513d8, public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getName()=[Ljava.lang.Class;@3a1d593e, public final java.util.Date com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getContractDate()=[Ljava.lang.Class;@4a8a60bc, public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.component4()=[Ljava.lang.Class;@361c294e, public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.component1()=[Ljava.lang.Class;@7859e786, public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.component2()=[Ljava.lang.Class;@285d851a, public static com.github.sbaldin.invoicer.domain.EmployeeDetailsModel com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.copy$default(com.github.sbaldin.invoicer.domain.EmployeeDetailsModel,java.lang.String,java.lang.String,java.util.Date,java.lang.String,int,int,int,int,int,java.lang.Object)=[Ljava.lang.Class;@314b8f2d, public final int com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.component7()=[Ljava.lang.Class;@664a9613, public final int com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.component8()=[Ljava.lang.Class;@5118388b, public final int com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.component5()=[Ljava.lang.Class;@15a902e7, public final int com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getVacationDaysInYear()=[Ljava.lang.Class;@7876d598, public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getInvoiceNumber()=[Ljava.lang.Class;@4a3e3e8b, public final int com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.component6()=[Ljava.lang.Class;@5af28b27, public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getDateOfService(java.util.Locale)=[Ljava.lang.Class;@71104a4, public int com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.hashCode()=[Ljava.lang.Class;@4985cbcb, public final com.github.sbaldin.invoicer.domain.EmployeeDetailsModel com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.copy(java.lang.String,java.lang.String,java.util.Date,java.lang.String,int,int,int,int)=[Ljava.lang.Class;@72f46e16, public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getSignPath()=[Ljava.lang.Class;@3c9168dc, public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.formattedPaymentDeadline(java.util.Locale)=[Ljava.lang.Class;@332a7fce, public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.formattedContractDate()=[Ljava.lang.Class;@549621f3, public final int com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getAdditionalExpenses()=[Ljava.lang.Class;@54361a9, public final int com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getVacationDaysInMonth()=[Ljava.lang.Class;@32232e55, public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.formattedInvoiceDate(java.util.Locale)=[Ljava.lang.Class;@5217f3d0, public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getServiceProvider()=[Ljava.lang.Class;@37ebc9d8, public boolean com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.equals(java.lang.Object)=[Ljava.lang.Class;@293bb8a5, public java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.toString()=[Ljava.lang.Class;@2416a51, public final int com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getMonthRate()=[Ljava.lang.Class;@6fa590ba, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@6e9319f}, additionalExpenses=java.beans.PropertyDescriptor[name=additionalExpenses; propertyType=int; readMethod=public final int com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getAdditionalExpenses()], equals=public boolean com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.equals(java.lang.Object), serviceProvider=java.beans.PropertyDescriptor[name=serviceProvider; propertyType=class java.lang.String; readMethod=public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getServiceProvider()], name=java.beans.PropertyDescriptor[name=name; propertyType=class java.lang.String; readMethod=public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getName()], getMonthRate=public final int com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getMonthRate(), toString=public java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.toString()}
[ERROR] 27.01.2020 11:29:26 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Error executing FreeMarker template
FreeMarker template error:
The following has evaluated to null or missing:
==> employee.invoiceDate  [in template "invoice_local.html" at line 103, column 45]

Tip: If the failing expression is known to be legally null/missing, either specify a default value with myOptionalVar!myDefault, or use <#if myOptionalVar??>when-present<#else>when-missing</#if>. (These only cover the last step of the expression; to cover the whole expression, use parenthessis: (myOptionVar.foo)!myDefault, (myOptionVar.foo)??

The failing instruction (FTL stack trace):
----------
==> ${employee.invoiceDate?date}  [in template "invoice_local.html" at line 103, column 43]
----------

Java stack trace (for programmers):
----------
freemarker.core.InvalidReferenceException: [... Exception message was already printed; see it above ...]
	at freemarker.core.InvalidReferenceException.getInstance(InvalidReferenceException.java:98)
	at freemarker.core.EvalUtil.coerceModelToString(EvalUtil.java:382)
	at freemarker.core.Expression.evalAndCoerceToString(Expression.java:115)
	at freemarker.core.MiscellaneousBuiltins$dateBI._eval(MiscellaneousBuiltins.java:83)
	at freemarker.core.Expression.eval(Expression.java:111)
	at freemarker.core.Expression.evalAndCoerceToString(Expression.java:115)
	at freemarker.core.DollarVariable.accept(DollarVariable.java:76)
	at freemarker.core.Environment.visit(Environment.java:265)
	at freemarker.core.MixedContent.accept(MixedContent.java:93)
	at freemarker.core.Environment.visit(Environment.java:265)
	at freemarker.core.Environment.process(Environment.java:243)
	at freemarker.template.Template.process(Template.java:277)
	at com.github.sbaldin.invoicer.generator.invoice.pdf.AbstractPdfBankInvoice.generatePdfFile(AbstractPdfBankInvoice.kt:52)
	at com.github.sbaldin.invoicer.generator.invoice.pdf.LocalBankInvoice.generate(LocalBankInvoice.kt:28)
	at com.github.sbaldin.invoicer.generator.InvoiceFactory.getPdfInvoiceList(InvoiceFactory.kt:75)
	at com.github.sbaldin.invoicer.ApplicationKt.main(Application.kt:63)
[INFO] 28.01.2020 11:22:56 [main] com.github.sbaldin.invoicer.ApplicationKt  - Args:./build/resources/main/application.yaml
[INFO] 28.01.2020 11:22:56 [main] com.github.sbaldin.invoicer.ApplicationKt  - Application config path:./build/resources/main/application.yaml
[INFO] 28.01.2020 11:22:56 [main] com.github.sbaldin.invoicer.ApplicationKt  - Invoice generation started. 
 Application will produce full-filled pdf files with signatures.
[DEBUG] 28.01.2020 11:22:56 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Could not find template in cache, creating new one; id=["invoice_foreign.html"["en_US",UTF-8,parsed] ]
[DEBUG] 28.01.2020 11:22:56 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Compiling FreeMarker template "invoice_foreign.html"["en_US",UTF-8,parsed]  from "jar:file:/home/sbaldin/workspace/employer_reports/build/install/invoicer-shadow/lib/invoicer-0.3-all.jar!/invoice_foreign.html"
[DEBUG] 28.01.2020 11:22:56 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Could not find template in cache, creating new one; id=["invoice_local.html"["en_US",UTF-8,parsed] ]
[DEBUG] 28.01.2020 11:22:56 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Compiling FreeMarker template "invoice_local.html"["en_US",UTF-8,parsed]  from "jar:file:/home/sbaldin/workspace/employer_reports/build/install/invoicer-shadow/lib/invoicer-0.3-all.jar!/invoice_local.html"
[DEBUG] 28.01.2020 11:22:56 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Key "invoiceDate" was not found on instance of com.github.sbaldin.invoicer.domain.EmployeeDetailsModel. Introspection information for the class is: {component1=public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.component1(), component2=public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.component2(), getClass=public final native java.lang.Class java.lang.Object.getClass(), contractDate=java.beans.PropertyDescriptor[name=contractDate; propertyType=class java.util.Date; readMethod=public final java.util.Date com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getContractDate()], component3=public final java.util.Date com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.component3(), getName=public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getName(), getContractDate=public final java.util.Date com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getContractDate(), component4=public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.component4(), monthRate=java.beans.PropertyDescriptor[name=monthRate; propertyType=int; readMethod=public final int com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getMonthRate()], copy$default=public static com.github.sbaldin.invoicer.domain.EmployeeDetailsModel com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.copy$default(com.github.sbaldin.invoicer.domain.EmployeeDetailsModel,java.lang.String,java.lang.String,java.util.Date,java.lang.String,int,int,int,int,int,java.lang.Object), vacationDaysInMonth=java.beans.PropertyDescriptor[name=vacationDaysInMonth; propertyType=int; readMethod=public final int com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getVacationDaysInMonth()], component5=public final int com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.component5(), getVacationDaysInYear=public final int com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getVacationDaysInYear(), getInvoiceNumber=public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getInvoiceNumber(), component6=public final int com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.component6(), signPath=java.beans.PropertyDescriptor[name=signPath; propertyType=class java.lang.String; readMethod=public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getSignPath()], component7=public final int com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.component7(), component8=public final int com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.component8(), getDateOfService=public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getDateOfService(java.util.Locale), hashCode=public int com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.hashCode(), invoiceNumber=java.beans.PropertyDescriptor[name=invoiceNumber; propertyType=class java.lang.String; readMethod=public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getInvoiceNumber()], copy=public final com.github.sbaldin.invoicer.domain.EmployeeDetailsModel com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.copy(java.lang.String,java.lang.String,java.util.Date,java.lang.String,int,int,int,int), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], getSignPath=public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getSignPath(), formattedContractDate=public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.formattedContractDate(), formattedPaymentDeadline=public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.formattedPaymentDeadline(java.util.Locale), getAdditionalExpenses=public final int com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getAdditionalExpenses(), java.lang.Object@630cb4a4=freemarker.ext.beans.SimpleMemberModel@71c5b236, getVacationDaysInMonth=public final int com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getVacationDaysInMonth(), getServiceProvider=public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getServiceProvider(), vacationDaysInYear=java.beans.PropertyDescriptor[name=vacationDaysInYear; propertyType=int; readMethod=public final int com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getVacationDaysInYear()], formattedInvoiceDate=public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.formattedInvoiceDate(java.util.Locale), java.lang.Object@4721d212={public final java.util.Date com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.component3()=[Ljava.lang.Class;@2cab9998, public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getName()=[Ljava.lang.Class;@2f7a7219, public final java.util.Date com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getContractDate()=[Ljava.lang.Class;@669513d8, public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.component4()=[Ljava.lang.Class;@3a1d593e, public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.component1()=[Ljava.lang.Class;@4a8a60bc, public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.component2()=[Ljava.lang.Class;@361c294e, public static com.github.sbaldin.invoicer.domain.EmployeeDetailsModel com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.copy$default(com.github.sbaldin.invoicer.domain.EmployeeDetailsModel,java.lang.String,java.lang.String,java.util.Date,java.lang.String,int,int,int,int,int,java.lang.Object)=[Ljava.lang.Class;@7859e786, public final int com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.component7()=[Ljava.lang.Class;@285d851a, public final int com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.component8()=[Ljava.lang.Class;@314b8f2d, public final int com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.component5()=[Ljava.lang.Class;@664a9613, public final int com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getVacationDaysInYear()=[Ljava.lang.Class;@5118388b, public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getInvoiceNumber()=[Ljava.lang.Class;@15a902e7, public final int com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.component6()=[Ljava.lang.Class;@7876d598, public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getDateOfService(java.util.Locale)=[Ljava.lang.Class;@4a3e3e8b, public int com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.hashCode()=[Ljava.lang.Class;@5af28b27, public final com.github.sbaldin.invoicer.domain.EmployeeDetailsModel com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.copy(java.lang.String,java.lang.String,java.util.Date,java.lang.String,int,int,int,int)=[Ljava.lang.Class;@71104a4, public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getSignPath()=[Ljava.lang.Class;@4985cbcb, public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.formattedPaymentDeadline(java.util.Locale)=[Ljava.lang.Class;@72f46e16, public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.formattedContractDate()=[Ljava.lang.Class;@3c9168dc, public final int com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getAdditionalExpenses()=[Ljava.lang.Class;@332a7fce, public final int com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getVacationDaysInMonth()=[Ljava.lang.Class;@549621f3, public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.formattedInvoiceDate(java.util.Locale)=[Ljava.lang.Class;@54361a9, public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getServiceProvider()=[Ljava.lang.Class;@32232e55, public boolean com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.equals(java.lang.Object)=[Ljava.lang.Class;@5217f3d0, public java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.toString()=[Ljava.lang.Class;@37ebc9d8, public final int com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getMonthRate()=[Ljava.lang.Class;@293bb8a5, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2416a51}, additionalExpenses=java.beans.PropertyDescriptor[name=additionalExpenses; propertyType=int; readMethod=public final int com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getAdditionalExpenses()], equals=public boolean com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.equals(java.lang.Object), serviceProvider=java.beans.PropertyDescriptor[name=serviceProvider; propertyType=class java.lang.String; readMethod=public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getServiceProvider()], name=java.beans.PropertyDescriptor[name=name; propertyType=class java.lang.String; readMethod=public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getName()], getMonthRate=public final int com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getMonthRate(), toString=public java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.toString()}
[DEBUG] 28.01.2020 11:22:56 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Key "invoiceDate" was not found on instance of com.github.sbaldin.invoicer.domain.EmployeeDetailsModel. Introspection information for the class is: {component1=public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.component1(), component2=public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.component2(), getClass=public final native java.lang.Class java.lang.Object.getClass(), contractDate=java.beans.PropertyDescriptor[name=contractDate; propertyType=class java.util.Date; readMethod=public final java.util.Date com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getContractDate()], component3=public final java.util.Date com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.component3(), getName=public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getName(), getContractDate=public final java.util.Date com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getContractDate(), component4=public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.component4(), monthRate=java.beans.PropertyDescriptor[name=monthRate; propertyType=int; readMethod=public final int com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getMonthRate()], copy$default=public static com.github.sbaldin.invoicer.domain.EmployeeDetailsModel com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.copy$default(com.github.sbaldin.invoicer.domain.EmployeeDetailsModel,java.lang.String,java.lang.String,java.util.Date,java.lang.String,int,int,int,int,int,java.lang.Object), vacationDaysInMonth=java.beans.PropertyDescriptor[name=vacationDaysInMonth; propertyType=int; readMethod=public final int com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getVacationDaysInMonth()], component5=public final int com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.component5(), getVacationDaysInYear=public final int com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getVacationDaysInYear(), getInvoiceNumber=public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getInvoiceNumber(), component6=public final int com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.component6(), signPath=java.beans.PropertyDescriptor[name=signPath; propertyType=class java.lang.String; readMethod=public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getSignPath()], component7=public final int com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.component7(), component8=public final int com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.component8(), getDateOfService=public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getDateOfService(java.util.Locale), hashCode=public int com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.hashCode(), invoiceNumber=java.beans.PropertyDescriptor[name=invoiceNumber; propertyType=class java.lang.String; readMethod=public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getInvoiceNumber()], copy=public final com.github.sbaldin.invoicer.domain.EmployeeDetailsModel com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.copy(java.lang.String,java.lang.String,java.util.Date,java.lang.String,int,int,int,int), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], getSignPath=public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getSignPath(), formattedContractDate=public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.formattedContractDate(), formattedPaymentDeadline=public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.formattedPaymentDeadline(java.util.Locale), getAdditionalExpenses=public final int com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getAdditionalExpenses(), java.lang.Object@630cb4a4=freemarker.ext.beans.SimpleMemberModel@71c5b236, getVacationDaysInMonth=public final int com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getVacationDaysInMonth(), getServiceProvider=public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getServiceProvider(), vacationDaysInYear=java.beans.PropertyDescriptor[name=vacationDaysInYear; propertyType=int; readMethod=public final int com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getVacationDaysInYear()], formattedInvoiceDate=public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.formattedInvoiceDate(java.util.Locale), java.lang.Object@4721d212={public final java.util.Date com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.component3()=[Ljava.lang.Class;@2cab9998, public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getName()=[Ljava.lang.Class;@2f7a7219, public final java.util.Date com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getContractDate()=[Ljava.lang.Class;@669513d8, public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.component4()=[Ljava.lang.Class;@3a1d593e, public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.component1()=[Ljava.lang.Class;@4a8a60bc, public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.component2()=[Ljava.lang.Class;@361c294e, public static com.github.sbaldin.invoicer.domain.EmployeeDetailsModel com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.copy$default(com.github.sbaldin.invoicer.domain.EmployeeDetailsModel,java.lang.String,java.lang.String,java.util.Date,java.lang.String,int,int,int,int,int,java.lang.Object)=[Ljava.lang.Class;@7859e786, public final int com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.component7()=[Ljava.lang.Class;@285d851a, public final int com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.component8()=[Ljava.lang.Class;@314b8f2d, public final int com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.component5()=[Ljava.lang.Class;@664a9613, public final int com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getVacationDaysInYear()=[Ljava.lang.Class;@5118388b, public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getInvoiceNumber()=[Ljava.lang.Class;@15a902e7, public final int com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.component6()=[Ljava.lang.Class;@7876d598, public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getDateOfService(java.util.Locale)=[Ljava.lang.Class;@4a3e3e8b, public int com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.hashCode()=[Ljava.lang.Class;@5af28b27, public final com.github.sbaldin.invoicer.domain.EmployeeDetailsModel com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.copy(java.lang.String,java.lang.String,java.util.Date,java.lang.String,int,int,int,int)=[Ljava.lang.Class;@71104a4, public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getSignPath()=[Ljava.lang.Class;@4985cbcb, public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.formattedPaymentDeadline(java.util.Locale)=[Ljava.lang.Class;@72f46e16, public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.formattedContractDate()=[Ljava.lang.Class;@3c9168dc, public final int com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getAdditionalExpenses()=[Ljava.lang.Class;@332a7fce, public final int com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getVacationDaysInMonth()=[Ljava.lang.Class;@549621f3, public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.formattedInvoiceDate(java.util.Locale)=[Ljava.lang.Class;@54361a9, public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getServiceProvider()=[Ljava.lang.Class;@32232e55, public boolean com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.equals(java.lang.Object)=[Ljava.lang.Class;@5217f3d0, public java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.toString()=[Ljava.lang.Class;@37ebc9d8, public final int com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getMonthRate()=[Ljava.lang.Class;@293bb8a5, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2416a51}, additionalExpenses=java.beans.PropertyDescriptor[name=additionalExpenses; propertyType=int; readMethod=public final int com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getAdditionalExpenses()], equals=public boolean com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.equals(java.lang.Object), serviceProvider=java.beans.PropertyDescriptor[name=serviceProvider; propertyType=class java.lang.String; readMethod=public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getServiceProvider()], name=java.beans.PropertyDescriptor[name=name; propertyType=class java.lang.String; readMethod=public final java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getName()], getMonthRate=public final int com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.getMonthRate(), toString=public java.lang.String com.github.sbaldin.invoicer.domain.EmployeeDetailsModel.toString()}
[ERROR] 28.01.2020 11:22:56 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Error executing FreeMarker template
FreeMarker template error:
The following has evaluated to null or missing:
==> employee.invoiceDate  [in template "invoice_local.html" at line 103, column 45]

Tip: If the failing expression is known to be legally null/missing, either specify a default value with myOptionalVar!myDefault, or use <#if myOptionalVar??>when-present<#else>when-missing</#if>. (These only cover the last step of the expression; to cover the whole expression, use parenthessis: (myOptionVar.foo)!myDefault, (myOptionVar.foo)??

The failing instruction (FTL stack trace):
----------
==> ${employee.invoiceDate?date}  [in template "invoice_local.html" at line 103, column 43]
----------

Java stack trace (for programmers):
----------
freemarker.core.InvalidReferenceException: [... Exception message was already printed; see it above ...]
	at freemarker.core.InvalidReferenceException.getInstance(InvalidReferenceException.java:98)
	at freemarker.core.EvalUtil.coerceModelToString(EvalUtil.java:382)
	at freemarker.core.Expression.evalAndCoerceToString(Expression.java:115)
	at freemarker.core.MiscellaneousBuiltins$dateBI._eval(MiscellaneousBuiltins.java:83)
	at freemarker.core.Expression.eval(Expression.java:111)
	at freemarker.core.Expression.evalAndCoerceToString(Expression.java:115)
	at freemarker.core.DollarVariable.accept(DollarVariable.java:76)
	at freemarker.core.Environment.visit(Environment.java:265)
	at freemarker.core.MixedContent.accept(MixedContent.java:93)
	at freemarker.core.Environment.visit(Environment.java:265)
	at freemarker.core.Environment.process(Environment.java:243)
	at freemarker.template.Template.process(Template.java:277)
	at com.github.sbaldin.invoicer.generator.invoice.pdf.AbstractPdfBankInvoice.generatePdfFile(AbstractPdfBankInvoice.kt:52)
	at com.github.sbaldin.invoicer.generator.invoice.pdf.LocalBankInvoice.generate(LocalBankInvoice.kt:28)
	at com.github.sbaldin.invoicer.generator.InvoiceFactory.getPdfInvoiceList(InvoiceFactory.kt:75)
	at com.github.sbaldin.invoicer.ApplicationKt.main(Application.kt:63)
[INFO] 28.01.2020 11:34:21 [main] com.github.sbaldin.invoicer.ApplicationKt  - Args:./build/resources/main/application.yaml
[INFO] 28.01.2020 11:34:21 [main] com.github.sbaldin.invoicer.ApplicationKt  - Application config path:./build/resources/main/application.yaml
[INFO] 28.01.2020 11:34:22 [main] com.github.sbaldin.invoicer.ApplicationKt  - Invoice generation started. 
 Application will produce full-filled pdf files with signatures.
[DEBUG] 28.01.2020 11:34:22 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Could not find template in cache, creating new one; id=["invoice_foreign.html"["en_US",UTF-8,parsed] ]
[DEBUG] 28.01.2020 11:34:22 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Compiling FreeMarker template "invoice_foreign.html"["en_US",UTF-8,parsed]  from "jar:file:/home/sbaldin/workspace/employer_reports/build/install/invoicer-shadow/lib/invoicer-0.3-all.jar!/invoice_foreign.html"
[DEBUG] 28.01.2020 11:34:22 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Could not find template in cache, creating new one; id=["invoice_local.html"["en_US",UTF-8,parsed] ]
[DEBUG] 28.01.2020 11:34:22 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Compiling FreeMarker template "invoice_local.html"["en_US",UTF-8,parsed]  from "jar:file:/home/sbaldin/workspace/employer_reports/build/install/invoicer-shadow/lib/invoicer-0.3-all.jar!/invoice_local.html"
[INFO] 28.01.2020 11:34:22 [main] com.github.sbaldin.invoicer.processor.SaveAsPdfProcessor  - Following command will be executed: 
 /home/sbaldin/workspace/employer_reports/binaries/phantomjs_lin64, /home/sbaldin/workspace/employer_reports/binaries/rasterize.js, /home/sbaldin/workspace/employer_reports/filled_template-1485033085.html, /home/sbaldin/Ivan Ivanov foreign invoice.pdf
[INFO] 28.01.2020 11:34:22 [main] com.github.sbaldin.invoicer.processor.SaveAsPdfProcessor  - Following command will be executed: 
 /home/sbaldin/workspace/employer_reports/binaries/phantomjs_lin64, /home/sbaldin/workspace/employer_reports/binaries/rasterize.js, /home/sbaldin/workspace/employer_reports/filled_template-1073524972.html, /home/sbaldin/Ivan Ivanov local invoice.pdf
[INFO] 28.01.2020 11:34:22 [main] com.github.sbaldin.invoicer.ApplicationKt  - Invoice generation completed.
[INFO] 28.01.2020 11:47:14 [main] com.github.sbaldin.invoicer.ApplicationKt  - Args:./build/resources/main/application.yaml
[INFO] 28.01.2020 11:47:14 [main] com.github.sbaldin.invoicer.ApplicationKt  - Application config path:./build/resources/main/application.yaml
[INFO] 28.01.2020 11:47:15 [main] com.github.sbaldin.invoicer.ApplicationKt  - Invoice generation started. 
 Application will produce full-filled pdf files with signatures.
[DEBUG] 28.01.2020 11:47:15 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Could not find template in cache, creating new one; id=["invoice_foreign.html"["en_US",UTF-8,parsed] ]
[DEBUG] 28.01.2020 11:47:15 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Compiling FreeMarker template "invoice_foreign.html"["en_US",UTF-8,parsed]  from "jar:file:/home/sbaldin/workspace/employer_reports/build/install/invoicer-shadow/lib/invoicer-0.3-all.jar!/invoice_foreign.html"
[DEBUG] 28.01.2020 11:47:15 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Could not find template in cache, creating new one; id=["invoice_local.html"["en_US",UTF-8,parsed] ]
[DEBUG] 28.01.2020 11:47:15 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Compiling FreeMarker template "invoice_local.html"["en_US",UTF-8,parsed]  from "jar:file:/home/sbaldin/workspace/employer_reports/build/install/invoicer-shadow/lib/invoicer-0.3-all.jar!/invoice_local.html"
[INFO] 28.01.2020 11:47:15 [main] com.github.sbaldin.invoicer.processor.SaveAsPdfProcessor  - Following command will be executed: 
 /home/sbaldin/workspace/employer_reports/binaries/phantomjs_lin64, /home/sbaldin/workspace/employer_reports/binaries/rasterize.js, /home/sbaldin/workspace/employer_reports/filled_template-716146565.html, /home/sbaldin/Ivan Ivanov foreign invoice.pdf
[INFO] 28.01.2020 11:47:15 [main] com.github.sbaldin.invoicer.processor.SaveAsPdfProcessor  - Following command will be executed: 
 /home/sbaldin/workspace/employer_reports/binaries/phantomjs_lin64, /home/sbaldin/workspace/employer_reports/binaries/rasterize.js, /home/sbaldin/workspace/employer_reports/filled_template981834898.html, /home/sbaldin/Ivan Ivanov local invoice.pdf
[INFO] 28.01.2020 11:47:16 [main] com.github.sbaldin.invoicer.ApplicationKt  - Invoice generation completed.
[INFO] 28.01.2020 11:51:19 [main] com.github.sbaldin.invoicer.ApplicationKt  - Args:./build/resources/main/application.yaml
[INFO] 28.01.2020 11:51:19 [main] com.github.sbaldin.invoicer.ApplicationKt  - Application config path:./build/resources/main/application.yaml
[INFO] 28.01.2020 11:51:20 [main] com.github.sbaldin.invoicer.ApplicationKt  - Invoice generation started. 
 Application will produce full-filled pdf files with signatures.
[DEBUG] 28.01.2020 11:51:20 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Could not find template in cache, creating new one; id=["invoice_foreign.html"["en_US",UTF-8,parsed] ]
[DEBUG] 28.01.2020 11:51:20 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Compiling FreeMarker template "invoice_foreign.html"["en_US",UTF-8,parsed]  from "jar:file:/home/sbaldin/workspace/employer_reports/build/install/invoicer-shadow/lib/invoicer-0.3-all.jar!/invoice_foreign.html"
[DEBUG] 28.01.2020 11:51:20 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Could not find template in cache, creating new one; id=["invoice_local.html"["en_US",UTF-8,parsed] ]
[DEBUG] 28.01.2020 11:51:20 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Compiling FreeMarker template "invoice_local.html"["en_US",UTF-8,parsed]  from "jar:file:/home/sbaldin/workspace/employer_reports/build/install/invoicer-shadow/lib/invoicer-0.3-all.jar!/invoice_local.html"
[INFO] 28.01.2020 11:51:20 [main] com.github.sbaldin.invoicer.processor.SaveAsPdfProcessor  - Following command will be executed: 
 /home/sbaldin/workspace/employer_reports/binaries/phantomjs_lin64, /home/sbaldin/workspace/employer_reports/binaries/rasterize.js, /home/sbaldin/workspace/employer_reports/filled_template225319717.html, /home/sbaldin/Ivan Ivanov foreign invoice.pdf
[INFO] 28.01.2020 11:51:20 [main] com.github.sbaldin.invoicer.processor.SaveAsPdfProcessor  - Following command will be executed: 
 /home/sbaldin/workspace/employer_reports/binaries/phantomjs_lin64, /home/sbaldin/workspace/employer_reports/binaries/rasterize.js, /home/sbaldin/workspace/employer_reports/filled_template-835419736.html, /home/sbaldin/Ivan Ivanov local invoice.pdf
[INFO] 28.01.2020 11:51:20 [main] com.github.sbaldin.invoicer.ApplicationKt  - Invoice generation completed.
[INFO] 28.01.2020 12:10:43 [main] com.github.sbaldin.invoicer.ApplicationKt  - Args:./build/resources/main/application.yaml
[INFO] 28.01.2020 12:10:43 [main] com.github.sbaldin.invoicer.ApplicationKt  - Application config path:./build/resources/main/application.yaml
[INFO] 28.01.2020 12:10:43 [main] com.github.sbaldin.invoicer.ApplicationKt  - Invoice generation started. 
 Application will produce full-filled pdf files with signatures.
[DEBUG] 28.01.2020 12:10:43 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Could not find template in cache, creating new one; id=["invoice_foreign.html"["en_US",UTF-8,parsed] ]
[DEBUG] 28.01.2020 12:10:43 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Compiling FreeMarker template "invoice_foreign.html"["en_US",UTF-8,parsed]  from "jar:file:/home/sbaldin/workspace/employer_reports/build/install/invoicer-shadow/lib/invoicer-0.3-all.jar!/invoice_foreign.html"
[DEBUG] 28.01.2020 12:10:43 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Could not find template in cache, creating new one; id=["invoice_local.html"["en_US",UTF-8,parsed] ]
[DEBUG] 28.01.2020 12:10:43 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Compiling FreeMarker template "invoice_local.html"["en_US",UTF-8,parsed]  from "jar:file:/home/sbaldin/workspace/employer_reports/build/install/invoicer-shadow/lib/invoicer-0.3-all.jar!/invoice_local.html"
[INFO] 28.01.2020 12:10:43 [main] com.github.sbaldin.invoicer.processor.SaveAsPdfProcessor  - Following command will be executed: 
 /home/sbaldin/workspace/employer_reports/binaries/phantomjs_lin64, /home/sbaldin/workspace/employer_reports/binaries/rasterize.js, /home/sbaldin/workspace/employer_reports/filled_template1556587898.html, /home/sbaldin/Ivan Ivanov foreign invoice.pdf
[INFO] 28.01.2020 12:10:44 [main] com.github.sbaldin.invoicer.processor.SaveAsPdfProcessor  - Following command will be executed: 
 /home/sbaldin/workspace/employer_reports/binaries/phantomjs_lin64, /home/sbaldin/workspace/employer_reports/binaries/rasterize.js, /home/sbaldin/workspace/employer_reports/filled_template819827871.html, /home/sbaldin/Ivan Ivanov local invoice.pdf
[INFO] 28.01.2020 12:10:44 [main] com.github.sbaldin.invoicer.ApplicationKt  - Invoice generation completed.
[INFO] 28.01.2020 12:11:25 [main] com.github.sbaldin.invoicer.ApplicationKt  - Args:./build/resources/main/application.yaml
[INFO] 28.01.2020 12:11:25 [main] com.github.sbaldin.invoicer.ApplicationKt  - Application config path:./build/resources/main/application.yaml
[INFO] 28.01.2020 12:11:26 [main] com.github.sbaldin.invoicer.ApplicationKt  - Invoice generation started. 
 Application will produce full-filled pdf files with signatures.
[DEBUG] 28.01.2020 12:11:26 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Could not find template in cache, creating new one; id=["invoice_foreign.html"["en_US",UTF-8,parsed] ]
[DEBUG] 28.01.2020 12:11:26 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Compiling FreeMarker template "invoice_foreign.html"["en_US",UTF-8,parsed]  from "jar:file:/home/sbaldin/workspace/employer_reports/build/install/invoicer-shadow/lib/invoicer-0.3-all.jar!/invoice_foreign.html"
[DEBUG] 28.01.2020 12:11:26 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Could not find template in cache, creating new one; id=["invoice_local.html"["en_US",UTF-8,parsed] ]
[DEBUG] 28.01.2020 12:11:26 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Compiling FreeMarker template "invoice_local.html"["en_US",UTF-8,parsed]  from "jar:file:/home/sbaldin/workspace/employer_reports/build/install/invoicer-shadow/lib/invoicer-0.3-all.jar!/invoice_local.html"
[INFO] 28.01.2020 12:11:26 [main] com.github.sbaldin.invoicer.processor.SaveAsPdfProcessor  - Following command will be executed: 
 /home/sbaldin/workspace/employer_reports/binaries/phantomjs_lin64, /home/sbaldin/workspace/employer_reports/binaries/rasterize.js, /home/sbaldin/workspace/employer_reports/filled_template-942671166.html, /home/sbaldin/Ivan Ivanov foreign invoice.pdf
[INFO] 28.01.2020 12:11:26 [main] com.github.sbaldin.invoicer.processor.SaveAsPdfProcessor  - Following command will be executed: 
 /home/sbaldin/workspace/employer_reports/binaries/phantomjs_lin64, /home/sbaldin/workspace/employer_reports/binaries/rasterize.js, /home/sbaldin/workspace/employer_reports/filled_template-813725901.html, /home/sbaldin/Ivan Ivanov local invoice.pdf
[INFO] 28.01.2020 12:11:27 [main] com.github.sbaldin.invoicer.ApplicationKt  - Invoice generation completed.
[INFO] 28.01.2020 12:18:27 [main] com.github.sbaldin.invoicer.ApplicationKt  - Args:./build/resources/main/application.yaml
[INFO] 28.01.2020 12:18:27 [main] com.github.sbaldin.invoicer.ApplicationKt  - Application config path:./build/resources/main/application.yaml
[INFO] 28.01.2020 12:18:27 [main] com.github.sbaldin.invoicer.ApplicationKt  - Invoice generation started. 
 Application will produce full-filled pdf files with signatures.
[DEBUG] 28.01.2020 12:18:27 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Could not find template in cache, creating new one; id=["invoice_foreign.html"["en_US",UTF-8,parsed] ]
[DEBUG] 28.01.2020 12:18:27 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Compiling FreeMarker template "invoice_foreign.html"["en_US",UTF-8,parsed]  from "jar:file:/home/sbaldin/workspace/employer_reports/build/install/invoicer-shadow/lib/invoicer-0.3-all.jar!/invoice_foreign.html"
[DEBUG] 28.01.2020 12:18:27 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Could not find template in cache, creating new one; id=["invoice_local.html"["en_US",UTF-8,parsed] ]
[DEBUG] 28.01.2020 12:18:27 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Compiling FreeMarker template "invoice_local.html"["en_US",UTF-8,parsed]  from "jar:file:/home/sbaldin/workspace/employer_reports/build/install/invoicer-shadow/lib/invoicer-0.3-all.jar!/invoice_local.html"
[INFO] 28.01.2020 12:18:27 [main] com.github.sbaldin.invoicer.processor.SaveAsPdfProcessor  - Following command will be executed: 
 /home/sbaldin/workspace/employer_reports/binaries/phantomjs_lin64, /home/sbaldin/workspace/employer_reports/binaries/rasterize.js, /home/sbaldin/workspace/employer_reports/filled_template-1651668012.html, /home/sbaldin/Ivan Ivanov foreign invoice.pdf
[INFO] 28.01.2020 12:18:28 [main] com.github.sbaldin.invoicer.processor.SaveAsPdfProcessor  - Following command will be executed: 
 /home/sbaldin/workspace/employer_reports/binaries/phantomjs_lin64, /home/sbaldin/workspace/employer_reports/binaries/rasterize.js, /home/sbaldin/workspace/employer_reports/filled_template9656987.html, /home/sbaldin/Ivan Ivanov local invoice.pdf
[INFO] 28.01.2020 12:18:28 [main] com.github.sbaldin.invoicer.ApplicationKt  - Invoice generation completed.
[INFO] 28.01.2020 12:19:07 [main] com.github.sbaldin.invoicer.ApplicationKt  - Args:./build/resources/main/application.yaml
[INFO] 28.01.2020 12:19:07 [main] com.github.sbaldin.invoicer.ApplicationKt  - Application config path:./build/resources/main/application.yaml
[INFO] 28.01.2020 12:19:08 [main] com.github.sbaldin.invoicer.ApplicationKt  - Invoice generation started. 
 Application will produce full-filled pdf files with signatures.
[DEBUG] 28.01.2020 12:19:08 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Could not find template in cache, creating new one; id=["invoice_foreign.html"["en_US",UTF-8,parsed] ]
[DEBUG] 28.01.2020 12:19:08 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Compiling FreeMarker template "invoice_foreign.html"["en_US",UTF-8,parsed]  from "jar:file:/home/sbaldin/workspace/employer_reports/build/install/invoicer-shadow/lib/invoicer-0.3-all.jar!/invoice_foreign.html"
[DEBUG] 28.01.2020 12:19:08 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Could not find template in cache, creating new one; id=["invoice_local.html"["en_US",UTF-8,parsed] ]
[DEBUG] 28.01.2020 12:19:08 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Compiling FreeMarker template "invoice_local.html"["en_US",UTF-8,parsed]  from "jar:file:/home/sbaldin/workspace/employer_reports/build/install/invoicer-shadow/lib/invoicer-0.3-all.jar!/invoice_local.html"
[INFO] 28.01.2020 12:19:08 [main] com.github.sbaldin.invoicer.processor.SaveAsPdfProcessor  - Following command will be executed: 
 /home/sbaldin/workspace/employer_reports/binaries/phantomjs_lin64, /home/sbaldin/workspace/employer_reports/binaries/rasterize.js, /home/sbaldin/workspace/employer_reports/filled_template-1383001178.html, /home/sbaldin/Ivan Ivanov foreign invoice.pdf
[INFO] 28.01.2020 12:19:08 [main] com.github.sbaldin.invoicer.processor.SaveAsPdfProcessor  - Following command will be executed: 
 /home/sbaldin/workspace/employer_reports/binaries/phantomjs_lin64, /home/sbaldin/workspace/employer_reports/binaries/rasterize.js, /home/sbaldin/workspace/employer_reports/filled_template749825756.html, /home/sbaldin/Ivan Ivanov local invoice.pdf
[INFO] 28.01.2020 12:19:08 [main] com.github.sbaldin.invoicer.ApplicationKt  - Invoice generation completed.
[INFO] 28.01.2020 12:21:03 [main] com.github.sbaldin.invoicer.ApplicationKt  - Args:./build/resources/main/application.yaml
[INFO] 28.01.2020 12:21:03 [main] com.github.sbaldin.invoicer.ApplicationKt  - Application config path:./build/resources/main/application.yaml
[INFO] 28.01.2020 12:21:04 [main] com.github.sbaldin.invoicer.ApplicationKt  - Invoice generation started. 
 Application will produce full-filled pdf files with signatures.
[DEBUG] 28.01.2020 12:21:04 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Could not find template in cache, creating new one; id=["invoice_foreign.html"["en_US",UTF-8,parsed] ]
[DEBUG] 28.01.2020 12:21:04 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Compiling FreeMarker template "invoice_foreign.html"["en_US",UTF-8,parsed]  from "jar:file:/home/sbaldin/workspace/employer_reports/build/install/invoicer-shadow/lib/invoicer-0.3-all.jar!/invoice_foreign.html"
[DEBUG] 28.01.2020 12:21:04 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Could not find template in cache, creating new one; id=["invoice_local.html"["en_US",UTF-8,parsed] ]
[DEBUG] 28.01.2020 12:21:04 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Compiling FreeMarker template "invoice_local.html"["en_US",UTF-8,parsed]  from "jar:file:/home/sbaldin/workspace/employer_reports/build/install/invoicer-shadow/lib/invoicer-0.3-all.jar!/invoice_local.html"
[INFO] 28.01.2020 12:21:04 [main] com.github.sbaldin.invoicer.processor.SaveAsPdfProcessor  - Following command will be executed: 
 /home/sbaldin/workspace/employer_reports/binaries/phantomjs_lin64, /home/sbaldin/workspace/employer_reports/binaries/rasterize.js, /home/sbaldin/workspace/employer_reports/filled_template87773590.html, /home/sbaldin/Ivan Ivanov foreign invoice.pdf
[INFO] 28.01.2020 12:21:04 [main] com.github.sbaldin.invoicer.processor.SaveAsPdfProcessor  - Following command will be executed: 
 /home/sbaldin/workspace/employer_reports/binaries/phantomjs_lin64, /home/sbaldin/workspace/employer_reports/binaries/rasterize.js, /home/sbaldin/workspace/employer_reports/filled_template1893493808.html, /home/sbaldin/Ivan Ivanov local invoice.pdf
[INFO] 28.01.2020 12:21:05 [main] com.github.sbaldin.invoicer.ApplicationKt  - Invoice generation completed.
[INFO] 28.01.2020 12:21:36 [main] com.github.sbaldin.invoicer.ApplicationKt  - Args:./build/resources/main/application.yaml
[INFO] 28.01.2020 12:21:36 [main] com.github.sbaldin.invoicer.ApplicationKt  - Application config path:./build/resources/main/application.yaml
[INFO] 28.01.2020 12:21:36 [main] com.github.sbaldin.invoicer.ApplicationKt  - Invoice generation started. 
 Application will produce full-filled pdf files with signatures.
[DEBUG] 28.01.2020 12:21:37 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Could not find template in cache, creating new one; id=["invoice_foreign.html"["en_US",UTF-8,parsed] ]
[DEBUG] 28.01.2020 12:21:37 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Compiling FreeMarker template "invoice_foreign.html"["en_US",UTF-8,parsed]  from "jar:file:/home/sbaldin/workspace/employer_reports/build/install/invoicer-shadow/lib/invoicer-0.3-all.jar!/invoice_foreign.html"
[DEBUG] 28.01.2020 12:21:37 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Could not find template in cache, creating new one; id=["invoice_local.html"["en_US",UTF-8,parsed] ]
[DEBUG] 28.01.2020 12:21:37 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Compiling FreeMarker template "invoice_local.html"["en_US",UTF-8,parsed]  from "jar:file:/home/sbaldin/workspace/employer_reports/build/install/invoicer-shadow/lib/invoicer-0.3-all.jar!/invoice_local.html"
[INFO] 28.01.2020 12:21:37 [main] com.github.sbaldin.invoicer.processor.SaveAsPdfProcessor  - Following command will be executed: 
 /home/sbaldin/workspace/employer_reports/binaries/phantomjs_lin64, /home/sbaldin/workspace/employer_reports/binaries/rasterize.js, /home/sbaldin/workspace/employer_reports/filled_template234073269.html, /home/sbaldin/Ivan Ivanov foreign invoice.pdf
[INFO] 28.01.2020 12:21:37 [main] com.github.sbaldin.invoicer.processor.SaveAsPdfProcessor  - Following command will be executed: 
 /home/sbaldin/workspace/employer_reports/binaries/phantomjs_lin64, /home/sbaldin/workspace/employer_reports/binaries/rasterize.js, /home/sbaldin/workspace/employer_reports/filled_template775156625.html, /home/sbaldin/Ivan Ivanov local invoice.pdf
[INFO] 28.01.2020 12:21:37 [main] com.github.sbaldin.invoicer.ApplicationKt  - Invoice generation completed.
[INFO] 28.01.2020 12:23:45 [main] com.github.sbaldin.invoicer.ApplicationKt  - Args:./build/resources/main/application.yaml
[INFO] 28.01.2020 12:23:45 [main] com.github.sbaldin.invoicer.ApplicationKt  - Application config path:./build/resources/main/application.yaml
[INFO] 28.01.2020 12:23:45 [main] com.github.sbaldin.invoicer.ApplicationKt  - Invoice generation started. 
 Application will produce full-filled pdf files with signatures.
[DEBUG] 28.01.2020 12:23:45 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Could not find template in cache, creating new one; id=["invoice_foreign.html"["en_US",UTF-8,parsed] ]
[DEBUG] 28.01.2020 12:23:45 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Compiling FreeMarker template "invoice_foreign.html"["en_US",UTF-8,parsed]  from "jar:file:/home/sbaldin/workspace/employer_reports/build/install/invoicer-shadow/lib/invoicer-0.3-all.jar!/invoice_foreign.html"
[DEBUG] 28.01.2020 12:23:45 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Could not find template in cache, creating new one; id=["invoice_local.html"["en_US",UTF-8,parsed] ]
[DEBUG] 28.01.2020 12:23:45 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Compiling FreeMarker template "invoice_local.html"["en_US",UTF-8,parsed]  from "jar:file:/home/sbaldin/workspace/employer_reports/build/install/invoicer-shadow/lib/invoicer-0.3-all.jar!/invoice_local.html"
[INFO] 28.01.2020 12:23:45 [main] com.github.sbaldin.invoicer.processor.SaveAsPdfProcessor  - Following command will be executed: 
 /home/sbaldin/workspace/employer_reports/binaries/phantomjs_lin64, /home/sbaldin/workspace/employer_reports/binaries/rasterize.js, /home/sbaldin/workspace/employer_reports/filled_template1902014339.html, /home/sbaldin/Ivan Ivanov foreign invoice.pdf
[INFO] 28.01.2020 12:23:46 [main] com.github.sbaldin.invoicer.processor.SaveAsPdfProcessor  - Following command will be executed: 
 /home/sbaldin/workspace/employer_reports/binaries/phantomjs_lin64, /home/sbaldin/workspace/employer_reports/binaries/rasterize.js, /home/sbaldin/workspace/employer_reports/filled_template-1378105667.html, /home/sbaldin/Ivan Ivanov local invoice.pdf
[INFO] 28.01.2020 12:23:46 [main] com.github.sbaldin.invoicer.ApplicationKt  - Invoice generation completed.
[INFO] 28.01.2020 12:23:55 [main] com.github.sbaldin.invoicer.ApplicationKt  - Args:./build/resources/main/application.yaml
[INFO] 28.01.2020 12:23:55 [main] com.github.sbaldin.invoicer.ApplicationKt  - Application config path:./build/resources/main/application.yaml
[INFO] 28.01.2020 12:23:55 [main] com.github.sbaldin.invoicer.ApplicationKt  - Invoice generation started. 
 Application will produce full-filled pdf files with signatures.
[DEBUG] 28.01.2020 12:23:55 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Could not find template in cache, creating new one; id=["invoice_foreign.html"["en_US",UTF-8,parsed] ]
[DEBUG] 28.01.2020 12:23:55 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Compiling FreeMarker template "invoice_foreign.html"["en_US",UTF-8,parsed]  from "jar:file:/home/sbaldin/workspace/employer_reports/build/install/invoicer-shadow/lib/invoicer-0.3-all.jar!/invoice_foreign.html"
[DEBUG] 28.01.2020 12:23:55 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Could not find template in cache, creating new one; id=["invoice_local.html"["en_US",UTF-8,parsed] ]
[DEBUG] 28.01.2020 12:23:55 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Compiling FreeMarker template "invoice_local.html"["en_US",UTF-8,parsed]  from "jar:file:/home/sbaldin/workspace/employer_reports/build/install/invoicer-shadow/lib/invoicer-0.3-all.jar!/invoice_local.html"
[INFO] 28.01.2020 12:23:55 [main] com.github.sbaldin.invoicer.processor.SaveAsPdfProcessor  - Following command will be executed: 
 /home/sbaldin/workspace/employer_reports/binaries/phantomjs_lin64, /home/sbaldin/workspace/employer_reports/binaries/rasterize.js, /home/sbaldin/workspace/employer_reports/filled_template1688033858.html, /home/sbaldin/Ivan Ivanov foreign invoice.pdf
[INFO] 28.01.2020 12:23:56 [main] com.github.sbaldin.invoicer.processor.SaveAsPdfProcessor  - Following command will be executed: 
 /home/sbaldin/workspace/employer_reports/binaries/phantomjs_lin64, /home/sbaldin/workspace/employer_reports/binaries/rasterize.js, /home/sbaldin/workspace/employer_reports/filled_template-752709779.html, /home/sbaldin/Ivan Ivanov local invoice.pdf
[INFO] 28.01.2020 12:23:56 [main] com.github.sbaldin.invoicer.ApplicationKt  - Invoice generation completed.
[INFO] 28.01.2020 12:38:44 [main] com.github.sbaldin.invoicer.ApplicationKt  - Args:./build/resources/main/application.yaml
[INFO] 28.01.2020 12:38:44 [main] com.github.sbaldin.invoicer.ApplicationKt  - Application config path:./build/resources/main/application.yaml
[INFO] 28.01.2020 12:38:44 [main] com.github.sbaldin.invoicer.ApplicationKt  - Invoice generation started. 
 Application will produce full-filled pdf files with signatures.
[DEBUG] 28.01.2020 12:38:44 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Could not find template in cache, creating new one; id=["invoice_foreign.html"["en_US",UTF-8,parsed] ]
[DEBUG] 28.01.2020 12:38:44 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Compiling FreeMarker template "invoice_foreign.html"["en_US",UTF-8,parsed]  from "jar:file:/home/sbaldin/workspace/employer_reports/build/install/invoicer-shadow/lib/invoicer-0.3-all.jar!/invoice_foreign.html"
[DEBUG] 28.01.2020 12:38:44 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Could not find template in cache, creating new one; id=["invoice_local.html"["en_US",UTF-8,parsed] ]
[DEBUG] 28.01.2020 12:38:44 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Compiling FreeMarker template "invoice_local.html"["en_US",UTF-8,parsed]  from "jar:file:/home/sbaldin/workspace/employer_reports/build/install/invoicer-shadow/lib/invoicer-0.3-all.jar!/invoice_local.html"
[INFO] 28.01.2020 12:38:44 [main] com.github.sbaldin.invoicer.processor.SaveAsPdfProcessor  - Following command will be executed: 
 /home/sbaldin/workspace/employer_reports/binaries/phantomjs_lin64, /home/sbaldin/workspace/employer_reports/binaries/rasterize.js, /home/sbaldin/workspace/employer_reports/filled_template1271136772.html, /home/sbaldin/Ivan Ivanov foreign invoice.pdf
[INFO] 28.01.2020 12:38:45 [main] com.github.sbaldin.invoicer.processor.SaveAsPdfProcessor  - Following command will be executed: 
 /home/sbaldin/workspace/employer_reports/binaries/phantomjs_lin64, /home/sbaldin/workspace/employer_reports/binaries/rasterize.js, /home/sbaldin/workspace/employer_reports/filled_template1333368199.html, /home/sbaldin/Ivan Ivanov local invoice.pdf
[INFO] 28.01.2020 12:38:45 [main] com.github.sbaldin.invoicer.ApplicationKt  - Invoice generation completed.
[INFO] 28.01.2020 13:46:10 [main] com.github.sbaldin.invoicer.ApplicationKt  - Args:./build/resources/main/application.yaml
[INFO] 28.01.2020 13:46:10 [main] com.github.sbaldin.invoicer.ApplicationKt  - Application config path:./build/resources/main/application.yaml
[INFO] 28.01.2020 13:46:11 [main] com.github.sbaldin.invoicer.ApplicationKt  - Invoice generation started. 
 Application will produce full-filled pdf files with signatures.
[DEBUG] 28.01.2020 13:46:11 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Could not find template in cache, creating new one; id=["invoice_foreign.html"["en_US",UTF-8,parsed] ]
[DEBUG] 28.01.2020 13:46:11 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Compiling FreeMarker template "invoice_foreign.html"["en_US",UTF-8,parsed]  from "jar:file:/home/sbaldin/workspace/employer_reports/build/install/invoicer-shadow/lib/invoicer-0.3-all.jar!/invoice_foreign.html"
[DEBUG] 28.01.2020 13:46:11 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Could not find template in cache, creating new one; id=["invoice_local.html"["en_US",UTF-8,parsed] ]
[DEBUG] 28.01.2020 13:46:11 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Compiling FreeMarker template "invoice_local.html"["en_US",UTF-8,parsed]  from "jar:file:/home/sbaldin/workspace/employer_reports/build/install/invoicer-shadow/lib/invoicer-0.3-all.jar!/invoice_local.html"
[INFO] 28.01.2020 13:46:11 [main] com.github.sbaldin.invoicer.processor.SaveAsPdfProcessor  - Following command will be executed: 
 /home/sbaldin/workspace/employer_reports/binaries/phantomjs_lin64, /home/sbaldin/workspace/employer_reports/binaries/rasterize.js, /home/sbaldin/workspace/employer_reports/filled_template-1165705831.html, /home/sbaldin/Ivan Ivanov foreign invoice.pdf
[INFO] 28.01.2020 13:46:11 [main] com.github.sbaldin.invoicer.processor.SaveAsPdfProcessor  - Following command will be executed: 
 /home/sbaldin/workspace/employer_reports/binaries/phantomjs_lin64, /home/sbaldin/workspace/employer_reports/binaries/rasterize.js, /home/sbaldin/workspace/employer_reports/filled_template-1192338611.html, /home/sbaldin/Ivan Ivanov local invoice.pdf
[INFO] 28.01.2020 13:46:11 [main] com.github.sbaldin.invoicer.ApplicationKt  - Invoice generation completed.
[INFO] 28.01.2020 13:48:51 [main] com.github.sbaldin.invoicer.ApplicationKt  - Args:./build/resources/main/application.yaml
[INFO] 28.01.2020 13:48:51 [main] com.github.sbaldin.invoicer.ApplicationKt  - Application config path:./build/resources/main/application.yaml
[INFO] 28.01.2020 13:48:52 [main] com.github.sbaldin.invoicer.ApplicationKt  - Invoice generation started. 
 Application will produce full-filled pdf files with signatures.
[DEBUG] 28.01.2020 13:48:52 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Could not find template in cache, creating new one; id=["invoice_foreign.html"["en_US",UTF-8,parsed] ]
[DEBUG] 28.01.2020 13:48:52 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Compiling FreeMarker template "invoice_foreign.html"["en_US",UTF-8,parsed]  from "jar:file:/home/sbaldin/workspace/employer_reports/build/install/invoicer-shadow/lib/invoicer-0.3-all.jar!/invoice_foreign.html"
[DEBUG] 28.01.2020 13:48:52 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Could not find template in cache, creating new one; id=["invoice_local.html"["en_US",UTF-8,parsed] ]
[DEBUG] 28.01.2020 13:48:52 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Compiling FreeMarker template "invoice_local.html"["en_US",UTF-8,parsed]  from "jar:file:/home/sbaldin/workspace/employer_reports/build/install/invoicer-shadow/lib/invoicer-0.3-all.jar!/invoice_local.html"
[INFO] 28.01.2020 13:48:52 [main] com.github.sbaldin.invoicer.processor.SaveAsPdfProcessor  - Following command will be executed: 
 /home/sbaldin/workspace/employer_reports/binaries/phantomjs_lin64, /home/sbaldin/workspace/employer_reports/binaries/rasterize.js, /home/sbaldin/workspace/employer_reports/filled_template718531579.html, /home/sbaldin/Ivan Ivanov foreign invoice.pdf
[INFO] 28.01.2020 13:48:52 [main] com.github.sbaldin.invoicer.processor.SaveAsPdfProcessor  - Following command will be executed: 
 /home/sbaldin/workspace/employer_reports/binaries/phantomjs_lin64, /home/sbaldin/workspace/employer_reports/binaries/rasterize.js, /home/sbaldin/workspace/employer_reports/filled_template1115827358.html, /home/sbaldin/Ivan Ivanov local invoice.pdf
[INFO] 28.01.2020 13:48:52 [main] com.github.sbaldin.invoicer.ApplicationKt  - Invoice generation completed.
[INFO] 28.01.2020 13:52:49 [main] com.github.sbaldin.invoicer.ApplicationKt  - Args:./build/resources/main/application.yaml
[INFO] 28.01.2020 13:52:49 [main] com.github.sbaldin.invoicer.ApplicationKt  - Application config path:./build/resources/main/application.yaml
[INFO] 28.01.2020 13:52:49 [main] com.github.sbaldin.invoicer.ApplicationKt  - Invoice generation started. 
 Application will produce full-filled pdf files with signatures.
[DEBUG] 28.01.2020 13:52:49 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Could not find template in cache, creating new one; id=["invoice_foreign.html"["en_US",UTF-8,parsed] ]
[DEBUG] 28.01.2020 13:52:49 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Compiling FreeMarker template "invoice_foreign.html"["en_US",UTF-8,parsed]  from "jar:file:/home/sbaldin/workspace/employer_reports/build/install/invoicer-shadow/lib/invoicer-0.3-all.jar!/invoice_foreign.html"
[DEBUG] 28.01.2020 13:52:49 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Could not find template in cache, creating new one; id=["invoice_local.html"["en_US",UTF-8,parsed] ]
[DEBUG] 28.01.2020 13:52:49 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Compiling FreeMarker template "invoice_local.html"["en_US",UTF-8,parsed]  from "jar:file:/home/sbaldin/workspace/employer_reports/build/install/invoicer-shadow/lib/invoicer-0.3-all.jar!/invoice_local.html"
[INFO] 28.01.2020 13:52:49 [main] com.github.sbaldin.invoicer.processor.SaveAsPdfProcessor  - Following command will be executed: 
 /home/sbaldin/workspace/employer_reports/binaries/phantomjs_lin64, /home/sbaldin/workspace/employer_reports/binaries/rasterize.js, /home/sbaldin/workspace/employer_reports/filled_template1717469086.html, /home/sbaldin/Ivan Ivanov foreign invoice.pdf
[INFO] 28.01.2020 13:52:50 [main] com.github.sbaldin.invoicer.processor.SaveAsPdfProcessor  - Following command will be executed: 
 /home/sbaldin/workspace/employer_reports/binaries/phantomjs_lin64, /home/sbaldin/workspace/employer_reports/binaries/rasterize.js, /home/sbaldin/workspace/employer_reports/filled_template-1021948693.html, /home/sbaldin/Ivan Ivanov local invoice.pdf
[INFO] 28.01.2020 13:52:50 [main] com.github.sbaldin.invoicer.ApplicationKt  - Invoice generation completed.
[INFO] 28.01.2020 13:54:50 [main] com.github.sbaldin.invoicer.ApplicationKt  - Args:./build/resources/main/application.yaml
[INFO] 28.01.2020 13:54:50 [main] com.github.sbaldin.invoicer.ApplicationKt  - Application config path:./build/resources/main/application.yaml
[INFO] 28.01.2020 13:54:51 [main] com.github.sbaldin.invoicer.ApplicationKt  - Invoice generation started. 
 Application will produce full-filled pdf files with signatures.
[DEBUG] 28.01.2020 13:54:51 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Could not find template in cache, creating new one; id=["invoice_foreign.html"["en_US",UTF-8,parsed] ]
[DEBUG] 28.01.2020 13:54:51 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Compiling FreeMarker template "invoice_foreign.html"["en_US",UTF-8,parsed]  from "jar:file:/home/sbaldin/workspace/employer_reports/build/install/invoicer-shadow/lib/invoicer-0.3-all.jar!/invoice_foreign.html"
[DEBUG] 28.01.2020 13:54:51 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Could not find template in cache, creating new one; id=["invoice_local.html"["en_US",UTF-8,parsed] ]
[DEBUG] 28.01.2020 13:54:51 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Compiling FreeMarker template "invoice_local.html"["en_US",UTF-8,parsed]  from "jar:file:/home/sbaldin/workspace/employer_reports/build/install/invoicer-shadow/lib/invoicer-0.3-all.jar!/invoice_local.html"
[INFO] 28.01.2020 13:54:51 [main] com.github.sbaldin.invoicer.processor.SaveAsPdfProcessor  - Following command will be executed: 
 /home/sbaldin/workspace/employer_reports/binaries/phantomjs_lin64, /home/sbaldin/workspace/employer_reports/binaries/rasterize.js, /home/sbaldin/workspace/employer_reports/filled_template1404026485.html, /home/sbaldin/Ivan Ivanov foreign invoice.pdf
[INFO] 28.01.2020 13:54:51 [main] com.github.sbaldin.invoicer.processor.SaveAsPdfProcessor  - Following command will be executed: 
 /home/sbaldin/workspace/employer_reports/binaries/phantomjs_lin64, /home/sbaldin/workspace/employer_reports/binaries/rasterize.js, /home/sbaldin/workspace/employer_reports/filled_template916652449.html, /home/sbaldin/Ivan Ivanov local invoice.pdf
[INFO] 28.01.2020 13:54:51 [main] com.github.sbaldin.invoicer.ApplicationKt  - Invoice generation completed.
[INFO] 28.01.2020 14:00:39 [main] com.github.sbaldin.invoicer.ApplicationKt  - Args:./build/resources/main/application.yaml
[INFO] 28.01.2020 14:00:39 [main] com.github.sbaldin.invoicer.ApplicationKt  - Application config path:./build/resources/main/application.yaml
[INFO] 28.01.2020 14:00:39 [main] com.github.sbaldin.invoicer.ApplicationKt  - Invoice generation started. 
 Application will produce full-filled pdf files with signatures.
[DEBUG] 28.01.2020 14:00:39 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Could not find template in cache, creating new one; id=["invoice_foreign.html"["en_US",UTF-8,parsed] ]
[DEBUG] 28.01.2020 14:00:39 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Compiling FreeMarker template "invoice_foreign.html"["en_US",UTF-8,parsed]  from "jar:file:/home/sbaldin/workspace/employer_reports/build/install/invoicer-shadow/lib/invoicer-0.3-all.jar!/invoice_foreign.html"
[DEBUG] 28.01.2020 14:00:39 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Could not find template in cache, creating new one; id=["invoice_local.html"["en_US",UTF-8,parsed] ]
[DEBUG] 28.01.2020 14:00:39 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Compiling FreeMarker template "invoice_local.html"["en_US",UTF-8,parsed]  from "jar:file:/home/sbaldin/workspace/employer_reports/build/install/invoicer-shadow/lib/invoicer-0.3-all.jar!/invoice_local.html"
[INFO] 28.01.2020 14:00:39 [main] com.github.sbaldin.invoicer.processor.SaveAsPdfProcessor  - Following command will be executed: 
 /home/sbaldin/workspace/employer_reports/binaries/phantomjs_lin64, /home/sbaldin/workspace/employer_reports/binaries/rasterize.js, /home/sbaldin/workspace/employer_reports/filled_template874752097.html, /home/sbaldin/Ivan Ivanov foreign invoice.pdf
[INFO] 28.01.2020 14:00:40 [main] com.github.sbaldin.invoicer.processor.SaveAsPdfProcessor  - Following command will be executed: 
 /home/sbaldin/workspace/employer_reports/binaries/phantomjs_lin64, /home/sbaldin/workspace/employer_reports/binaries/rasterize.js, /home/sbaldin/workspace/employer_reports/filled_template831404181.html, /home/sbaldin/Ivan Ivanov local invoice.pdf
[INFO] 28.01.2020 14:00:40 [main] com.github.sbaldin.invoicer.ApplicationKt  - Invoice generation completed.
[INFO] 28.01.2020 14:01:15 [main] com.github.sbaldin.invoicer.ApplicationKt  - Args:./build/resources/main/application.yaml
[INFO] 28.01.2020 14:01:15 [main] com.github.sbaldin.invoicer.ApplicationKt  - Application config path:./build/resources/main/application.yaml
[INFO] 28.01.2020 14:01:15 [main] com.github.sbaldin.invoicer.ApplicationKt  - Invoice generation started. 
 Application will produce full-filled pdf files with signatures.
[DEBUG] 28.01.2020 14:01:15 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Could not find template in cache, creating new one; id=["invoice_foreign.html"["en_US",UTF-8,parsed] ]
[DEBUG] 28.01.2020 14:01:15 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Compiling FreeMarker template "invoice_foreign.html"["en_US",UTF-8,parsed]  from "jar:file:/home/sbaldin/workspace/employer_reports/build/install/invoicer-shadow/lib/invoicer-0.3-all.jar!/invoice_foreign.html"
[DEBUG] 28.01.2020 14:01:15 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Could not find template in cache, creating new one; id=["invoice_local.html"["en_US",UTF-8,parsed] ]
[DEBUG] 28.01.2020 14:01:15 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Compiling FreeMarker template "invoice_local.html"["en_US",UTF-8,parsed]  from "jar:file:/home/sbaldin/workspace/employer_reports/build/install/invoicer-shadow/lib/invoicer-0.3-all.jar!/invoice_local.html"
[INFO] 28.01.2020 14:01:15 [main] com.github.sbaldin.invoicer.processor.SaveAsPdfProcessor  - Following command will be executed: 
 /home/sbaldin/workspace/employer_reports/binaries/phantomjs_lin64, /home/sbaldin/workspace/employer_reports/binaries/rasterize.js, /home/sbaldin/workspace/employer_reports/filled_template-545252927.html, /home/sbaldin/Ivan Ivanov foreign invoice.pdf
[INFO] 28.01.2020 14:01:16 [main] com.github.sbaldin.invoicer.processor.SaveAsPdfProcessor  - Following command will be executed: 
 /home/sbaldin/workspace/employer_reports/binaries/phantomjs_lin64, /home/sbaldin/workspace/employer_reports/binaries/rasterize.js, /home/sbaldin/workspace/employer_reports/filled_template-1844993754.html, /home/sbaldin/Ivan Ivanov local invoice.pdf
[INFO] 28.01.2020 14:01:16 [main] com.github.sbaldin.invoicer.ApplicationKt  - Invoice generation completed.
[INFO] 28.01.2020 14:02:40 [main] com.github.sbaldin.invoicer.ApplicationKt  - Args:./build/resources/main/application.yaml
[INFO] 28.01.2020 14:02:40 [main] com.github.sbaldin.invoicer.ApplicationKt  - Application config path:./build/resources/main/application.yaml
[INFO] 28.01.2020 14:02:40 [main] com.github.sbaldin.invoicer.ApplicationKt  - Invoice generation started. 
 Application will produce full-filled pdf files with signatures.
[DEBUG] 28.01.2020 14:02:40 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Could not find template in cache, creating new one; id=["invoice_foreign.html"["en_US",UTF-8,parsed] ]
[DEBUG] 28.01.2020 14:02:40 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Compiling FreeMarker template "invoice_foreign.html"["en_US",UTF-8,parsed]  from "jar:file:/home/sbaldin/workspace/employer_reports/build/install/invoicer-shadow/lib/invoicer-0.3-all.jar!/invoice_foreign.html"
[DEBUG] 28.01.2020 14:02:41 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Could not find template in cache, creating new one; id=["invoice_local.html"["en_US",UTF-8,parsed] ]
[DEBUG] 28.01.2020 14:02:41 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Compiling FreeMarker template "invoice_local.html"["en_US",UTF-8,parsed]  from "jar:file:/home/sbaldin/workspace/employer_reports/build/install/invoicer-shadow/lib/invoicer-0.3-all.jar!/invoice_local.html"
[INFO] 28.01.2020 14:02:41 [main] com.github.sbaldin.invoicer.processor.SaveAsPdfProcessor  - Following command will be executed: 
 /home/sbaldin/workspace/employer_reports/binaries/phantomjs_lin64, /home/sbaldin/workspace/employer_reports/binaries/rasterize.js, /home/sbaldin/workspace/employer_reports/filled_template-1661360559.html, /home/sbaldin/Ivan Ivanov foreign invoice.pdf
[INFO] 28.01.2020 14:02:41 [main] com.github.sbaldin.invoicer.processor.SaveAsPdfProcessor  - Following command will be executed: 
 /home/sbaldin/workspace/employer_reports/binaries/phantomjs_lin64, /home/sbaldin/workspace/employer_reports/binaries/rasterize.js, /home/sbaldin/workspace/employer_reports/filled_template730303295.html, /home/sbaldin/Ivan Ivanov local invoice.pdf
[INFO] 28.01.2020 14:02:41 [main] com.github.sbaldin.invoicer.ApplicationKt  - Invoice generation completed.
[INFO] 28.01.2020 14:03:42 [main] com.github.sbaldin.invoicer.ApplicationKt  - Args:./build/resources/main/application.yaml
[INFO] 28.01.2020 14:03:42 [main] com.github.sbaldin.invoicer.ApplicationKt  - Application config path:./build/resources/main/application.yaml
[INFO] 28.01.2020 14:03:43 [main] com.github.sbaldin.invoicer.ApplicationKt  - Invoice generation started. 
 Application will produce full-filled pdf files with signatures.
[DEBUG] 28.01.2020 14:03:43 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Could not find template in cache, creating new one; id=["invoice_foreign.html"["en_US",UTF-8,parsed] ]
[DEBUG] 28.01.2020 14:03:43 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Compiling FreeMarker template "invoice_foreign.html"["en_US",UTF-8,parsed]  from "jar:file:/home/sbaldin/workspace/employer_reports/build/install/invoicer-shadow/lib/invoicer-0.3-all.jar!/invoice_foreign.html"
[DEBUG] 28.01.2020 14:03:43 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Could not find template in cache, creating new one; id=["invoice_local.html"["en_US",UTF-8,parsed] ]
[DEBUG] 28.01.2020 14:03:43 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Compiling FreeMarker template "invoice_local.html"["en_US",UTF-8,parsed]  from "jar:file:/home/sbaldin/workspace/employer_reports/build/install/invoicer-shadow/lib/invoicer-0.3-all.jar!/invoice_local.html"
[INFO] 28.01.2020 14:03:43 [main] com.github.sbaldin.invoicer.processor.SaveAsPdfProcessor  - Following command will be executed: 
 /home/sbaldin/workspace/employer_reports/binaries/phantomjs_lin64, /home/sbaldin/workspace/employer_reports/binaries/rasterize.js, /home/sbaldin/workspace/employer_reports/filled_template-2130480384.html, /home/sbaldin/Ivan Ivanov foreign invoice.pdf
[INFO] 28.01.2020 14:03:43 [main] com.github.sbaldin.invoicer.processor.SaveAsPdfProcessor  - Following command will be executed: 
 /home/sbaldin/workspace/employer_reports/binaries/phantomjs_lin64, /home/sbaldin/workspace/employer_reports/binaries/rasterize.js, /home/sbaldin/workspace/employer_reports/filled_template1425925986.html, /home/sbaldin/Ivan Ivanov local invoice.pdf
[INFO] 28.01.2020 14:03:43 [main] com.github.sbaldin.invoicer.ApplicationKt  - Invoice generation completed.
[INFO] 28.01.2020 14:05:09 [main] com.github.sbaldin.invoicer.ApplicationKt  - Args:./build/resources/main/application.yaml
[INFO] 28.01.2020 14:05:09 [main] com.github.sbaldin.invoicer.ApplicationKt  - Application config path:./build/resources/main/application.yaml
[INFO] 28.01.2020 14:05:09 [main] com.github.sbaldin.invoicer.ApplicationKt  - Invoice generation started. 
 Application will produce full-filled pdf files with signatures.
[DEBUG] 28.01.2020 14:05:09 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Could not find template in cache, creating new one; id=["invoice_foreign.html"["en_US",UTF-8,parsed] ]
[DEBUG] 28.01.2020 14:05:09 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Compiling FreeMarker template "invoice_foreign.html"["en_US",UTF-8,parsed]  from "jar:file:/home/sbaldin/workspace/employer_reports/build/install/invoicer-shadow/lib/invoicer-0.3-all.jar!/invoice_foreign.html"
[DEBUG] 28.01.2020 14:05:09 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Could not find template in cache, creating new one; id=["invoice_local.html"["en_US",UTF-8,parsed] ]
[DEBUG] 28.01.2020 14:05:09 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Compiling FreeMarker template "invoice_local.html"["en_US",UTF-8,parsed]  from "jar:file:/home/sbaldin/workspace/employer_reports/build/install/invoicer-shadow/lib/invoicer-0.3-all.jar!/invoice_local.html"
[INFO] 28.01.2020 14:05:09 [main] com.github.sbaldin.invoicer.processor.SaveAsPdfProcessor  - Following command will be executed: 
 /home/sbaldin/workspace/employer_reports/binaries/phantomjs_lin64, /home/sbaldin/workspace/employer_reports/binaries/rasterize.js, /home/sbaldin/workspace/employer_reports/filled_template644116699.html, /home/sbaldin/Ivan Ivanov foreign invoice.pdf
[INFO] 28.01.2020 14:05:10 [main] com.github.sbaldin.invoicer.processor.SaveAsPdfProcessor  - Following command will be executed: 
 /home/sbaldin/workspace/employer_reports/binaries/phantomjs_lin64, /home/sbaldin/workspace/employer_reports/binaries/rasterize.js, /home/sbaldin/workspace/employer_reports/filled_template-1273955243.html, /home/sbaldin/Ivan Ivanov local invoice.pdf
[INFO] 28.01.2020 14:05:10 [main] com.github.sbaldin.invoicer.ApplicationKt  - Invoice generation completed.
[INFO] 28.01.2020 14:10:10 [main] com.github.sbaldin.invoicer.ApplicationKt  - Args:./build/resources/main/application.yaml
[INFO] 28.01.2020 14:10:10 [main] com.github.sbaldin.invoicer.ApplicationKt  - Application config path:./build/resources/main/application.yaml
[INFO] 28.01.2020 14:10:10 [main] com.github.sbaldin.invoicer.ApplicationKt  - Invoice generation started. 
 Application will produce full-filled pdf files with signatures.
[DEBUG] 28.01.2020 14:10:10 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Could not find template in cache, creating new one; id=["invoice_foreign.html"["en_US",UTF-8,parsed] ]
[DEBUG] 28.01.2020 14:10:10 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Compiling FreeMarker template "invoice_foreign.html"["en_US",UTF-8,parsed]  from "jar:file:/home/sbaldin/workspace/employer_reports/build/install/invoicer-shadow/lib/invoicer-0.3-all.jar!/invoice_foreign.html"
[DEBUG] 28.01.2020 14:10:10 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Could not find template in cache, creating new one; id=["invoice_local.html"["en_US",UTF-8,parsed] ]
[DEBUG] 28.01.2020 14:10:10 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Compiling FreeMarker template "invoice_local.html"["en_US",UTF-8,parsed]  from "jar:file:/home/sbaldin/workspace/employer_reports/build/install/invoicer-shadow/lib/invoicer-0.3-all.jar!/invoice_local.html"
[INFO] 28.01.2020 14:10:10 [main] com.github.sbaldin.invoicer.processor.SaveAsPdfProcessor  - Following command will be executed: 
 /home/sbaldin/workspace/employer_reports/binaries/phantomjs_lin64, /home/sbaldin/workspace/employer_reports/binaries/rasterize.js, /home/sbaldin/workspace/employer_reports/filled_template-1960296644.html, /home/sbaldin/Ivan Ivanov foreign invoice.pdf
[INFO] 28.01.2020 14:10:10 [main] com.github.sbaldin.invoicer.processor.SaveAsPdfProcessor  - Following command will be executed: 
 /home/sbaldin/workspace/employer_reports/binaries/phantomjs_lin64, /home/sbaldin/workspace/employer_reports/binaries/rasterize.js, /home/sbaldin/workspace/employer_reports/filled_template-1004094261.html, /home/sbaldin/Ivan Ivanov local invoice.pdf
[INFO] 28.01.2020 14:10:11 [main] com.github.sbaldin.invoicer.ApplicationKt  - Invoice generation completed.
[INFO] 28.01.2020 14:11:02 [main] com.github.sbaldin.invoicer.ApplicationKt  - Args:./build/resources/main/application.yaml
[INFO] 28.01.2020 14:11:02 [main] com.github.sbaldin.invoicer.ApplicationKt  - Application config path:./build/resources/main/application.yaml
[INFO] 28.01.2020 14:11:02 [main] com.github.sbaldin.invoicer.ApplicationKt  - Invoice generation started. 
 Application will produce full-filled pdf files with signatures.
[DEBUG] 28.01.2020 14:11:02 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Could not find template in cache, creating new one; id=["invoice_foreign.html"["en_US",UTF-8,parsed] ]
[DEBUG] 28.01.2020 14:11:02 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Compiling FreeMarker template "invoice_foreign.html"["en_US",UTF-8,parsed]  from "jar:file:/home/sbaldin/workspace/employer_reports/build/install/invoicer-shadow/lib/invoicer-0.3-all.jar!/invoice_foreign.html"
[DEBUG] 28.01.2020 14:11:02 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Could not find template in cache, creating new one; id=["invoice_local.html"["en_US",UTF-8,parsed] ]
[DEBUG] 28.01.2020 14:11:02 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Compiling FreeMarker template "invoice_local.html"["en_US",UTF-8,parsed]  from "jar:file:/home/sbaldin/workspace/employer_reports/build/install/invoicer-shadow/lib/invoicer-0.3-all.jar!/invoice_local.html"
[INFO] 28.01.2020 14:11:02 [main] com.github.sbaldin.invoicer.processor.SaveAsPdfProcessor  - Following command will be executed: 
 /home/sbaldin/workspace/employer_reports/binaries/phantomjs_lin64, /home/sbaldin/workspace/employer_reports/binaries/rasterize.js, /home/sbaldin/workspace/employer_reports/filled_template-413603074.html, /home/sbaldin/Ivan Ivanov foreign invoice.pdf
[INFO] 28.01.2020 14:11:03 [main] com.github.sbaldin.invoicer.processor.SaveAsPdfProcessor  - Following command will be executed: 
 /home/sbaldin/workspace/employer_reports/binaries/phantomjs_lin64, /home/sbaldin/workspace/employer_reports/binaries/rasterize.js, /home/sbaldin/workspace/employer_reports/filled_template456375982.html, /home/sbaldin/Ivan Ivanov local invoice.pdf
[INFO] 28.01.2020 14:11:03 [main] com.github.sbaldin.invoicer.ApplicationKt  - Invoice generation completed.
[INFO] 28.01.2020 14:11:58 [main] com.github.sbaldin.invoicer.ApplicationKt  - Args:./build/resources/main/application.yaml
[INFO] 28.01.2020 14:11:58 [main] com.github.sbaldin.invoicer.ApplicationKt  - Application config path:./build/resources/main/application.yaml
[INFO] 28.01.2020 14:11:58 [main] com.github.sbaldin.invoicer.ApplicationKt  - Invoice generation started. 
 Application will produce full-filled pdf files with signatures.
[DEBUG] 28.01.2020 14:11:58 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Could not find template in cache, creating new one; id=["invoice_foreign.html"["en_US",UTF-8,parsed] ]
[DEBUG] 28.01.2020 14:11:58 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Compiling FreeMarker template "invoice_foreign.html"["en_US",UTF-8,parsed]  from "jar:file:/home/sbaldin/workspace/employer_reports/build/install/invoicer-shadow/lib/invoicer-0.3-all.jar!/invoice_foreign.html"
[DEBUG] 28.01.2020 14:11:58 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Could not find template in cache, creating new one; id=["invoice_local.html"["en_US",UTF-8,parsed] ]
[DEBUG] 28.01.2020 14:11:58 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Compiling FreeMarker template "invoice_local.html"["en_US",UTF-8,parsed]  from "jar:file:/home/sbaldin/workspace/employer_reports/build/install/invoicer-shadow/lib/invoicer-0.3-all.jar!/invoice_local.html"
[INFO] 28.01.2020 14:11:58 [main] com.github.sbaldin.invoicer.processor.SaveAsPdfProcessor  - Following command will be executed: 
 /home/sbaldin/workspace/employer_reports/binaries/phantomjs_lin64, /home/sbaldin/workspace/employer_reports/binaries/rasterize.js, /home/sbaldin/workspace/employer_reports/filled_template-482380844.html, /home/sbaldin/Ivan Ivanov foreign invoice.pdf
[INFO] 28.01.2020 14:11:59 [main] com.github.sbaldin.invoicer.processor.SaveAsPdfProcessor  - Following command will be executed: 
 /home/sbaldin/workspace/employer_reports/binaries/phantomjs_lin64, /home/sbaldin/workspace/employer_reports/binaries/rasterize.js, /home/sbaldin/workspace/employer_reports/filled_template-1370370915.html, /home/sbaldin/Ivan Ivanov local invoice.pdf
[INFO] 28.01.2020 14:11:59 [main] com.github.sbaldin.invoicer.ApplicationKt  - Invoice generation completed.
[INFO] 28.01.2020 14:13:01 [main] com.github.sbaldin.invoicer.ApplicationKt  - Args:./build/resources/main/application.yaml
[INFO] 28.01.2020 14:13:01 [main] com.github.sbaldin.invoicer.ApplicationKt  - Application config path:./build/resources/main/application.yaml
[INFO] 28.01.2020 14:13:02 [main] com.github.sbaldin.invoicer.ApplicationKt  - Invoice generation started. 
 Application will produce full-filled pdf files with signatures.
[DEBUG] 28.01.2020 14:13:02 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Could not find template in cache, creating new one; id=["invoice_foreign.html"["en_US",UTF-8,parsed] ]
[DEBUG] 28.01.2020 14:13:02 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Compiling FreeMarker template "invoice_foreign.html"["en_US",UTF-8,parsed]  from "jar:file:/home/sbaldin/workspace/employer_reports/build/install/invoicer-shadow/lib/invoicer-0.3-all.jar!/invoice_foreign.html"
[DEBUG] 28.01.2020 14:13:02 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Could not find template in cache, creating new one; id=["invoice_local.html"["en_US",UTF-8,parsed] ]
[DEBUG] 28.01.2020 14:13:02 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Compiling FreeMarker template "invoice_local.html"["en_US",UTF-8,parsed]  from "jar:file:/home/sbaldin/workspace/employer_reports/build/install/invoicer-shadow/lib/invoicer-0.3-all.jar!/invoice_local.html"
[INFO] 28.01.2020 14:13:02 [main] com.github.sbaldin.invoicer.processor.SaveAsPdfProcessor  - Following command will be executed: 
 /home/sbaldin/workspace/employer_reports/binaries/phantomjs_lin64, /home/sbaldin/workspace/employer_reports/binaries/rasterize.js, /home/sbaldin/workspace/employer_reports/filled_template-1219117980.html, /home/sbaldin/Ivan Ivanov foreign invoice.pdf
[INFO] 28.01.2020 14:13:02 [main] com.github.sbaldin.invoicer.processor.SaveAsPdfProcessor  - Following command will be executed: 
 /home/sbaldin/workspace/employer_reports/binaries/phantomjs_lin64, /home/sbaldin/workspace/employer_reports/binaries/rasterize.js, /home/sbaldin/workspace/employer_reports/filled_template-1558863595.html, /home/sbaldin/Ivan Ivanov local invoice.pdf
[INFO] 28.01.2020 14:13:03 [main] com.github.sbaldin.invoicer.ApplicationKt  - Invoice generation completed.
[INFO] 28.01.2020 14:15:42 [main] com.github.sbaldin.invoicer.ApplicationKt  - Args:./build/resources/main/application.yaml
[INFO] 28.01.2020 14:15:42 [main] com.github.sbaldin.invoicer.ApplicationKt  - Application config path:./build/resources/main/application.yaml
[INFO] 28.01.2020 14:15:43 [main] com.github.sbaldin.invoicer.ApplicationKt  - Invoice generation started. 
 Application will produce full-filled pdf files with signatures.
[DEBUG] 28.01.2020 14:15:43 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Could not find template in cache, creating new one; id=["invoice_foreign.html"["en_US",UTF-8,parsed] ]
[DEBUG] 28.01.2020 14:15:43 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Compiling FreeMarker template "invoice_foreign.html"["en_US",UTF-8,parsed]  from "jar:file:/home/sbaldin/workspace/employer_reports/build/install/invoicer-shadow/lib/invoicer-0.3-all.jar!/invoice_foreign.html"
[DEBUG] 28.01.2020 14:15:43 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Could not find template in cache, creating new one; id=["invoice_local.html"["en_US",UTF-8,parsed] ]
[DEBUG] 28.01.2020 14:15:43 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Compiling FreeMarker template "invoice_local.html"["en_US",UTF-8,parsed]  from "jar:file:/home/sbaldin/workspace/employer_reports/build/install/invoicer-shadow/lib/invoicer-0.3-all.jar!/invoice_local.html"
[INFO] 28.01.2020 14:15:43 [main] com.github.sbaldin.invoicer.processor.SaveAsPdfProcessor  - Following command will be executed: 
 /home/sbaldin/workspace/employer_reports/binaries/phantomjs_lin64, /home/sbaldin/workspace/employer_reports/binaries/rasterize.js, /home/sbaldin/workspace/employer_reports/filled_template1010292014.html, /home/sbaldin/Ivan Ivanov foreign invoice.pdf
[INFO] 28.01.2020 14:15:43 [main] com.github.sbaldin.invoicer.processor.SaveAsPdfProcessor  - Following command will be executed: 
 /home/sbaldin/workspace/employer_reports/binaries/phantomjs_lin64, /home/sbaldin/workspace/employer_reports/binaries/rasterize.js, /home/sbaldin/workspace/employer_reports/filled_template1829093128.html, /home/sbaldin/Ivan Ivanov local invoice.pdf
[INFO] 28.01.2020 14:15:43 [main] com.github.sbaldin.invoicer.ApplicationKt  - Invoice generation completed.
[INFO] 30.01.2020 23:08:25 [main] com.github.sbaldin.invoicer.ApplicationKt  - Args:./build/resources/main/application.yaml
[INFO] 30.01.2020 23:08:25 [main] com.github.sbaldin.invoicer.ApplicationKt  - Application config path:./build/resources/main/application.yaml
[INFO] 30.01.2020 23:08:26 [main] com.github.sbaldin.invoicer.ApplicationKt  - Invoice generation started. 
 Application will produce full-filled pdf files with signatures.
[DEBUG] 30.01.2020 23:08:26 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Could not find template in cache, creating new one; id=["invoice_foreign.html"["en_US",UTF-8,parsed] ]
[DEBUG] 30.01.2020 23:08:26 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Compiling FreeMarker template "invoice_foreign.html"["en_US",UTF-8,parsed]  from "jar:file:/home/sbaldin/workspace/employer_reports/build/install/invoicer-shadow/lib/invoicer-0.3-all.jar!/invoice_foreign.html"
[DEBUG] 30.01.2020 23:08:26 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Could not find template in cache, creating new one; id=["invoice_local.html"["en_US",UTF-8,parsed] ]
[DEBUG] 30.01.2020 23:08:26 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Compiling FreeMarker template "invoice_local.html"["en_US",UTF-8,parsed]  from "jar:file:/home/sbaldin/workspace/employer_reports/build/install/invoicer-shadow/lib/invoicer-0.3-all.jar!/invoice_local.html"
[INFO] 30.01.2020 23:08:26 [main] com.github.sbaldin.invoicer.processor.SaveAsPdfProcessor  - Following command will be executed: 
 /home/sbaldin/workspace/employer_reports/binaries/phantomjs_lin64, /home/sbaldin/workspace/employer_reports/binaries/rasterize.js, /home/sbaldin/workspace/employer_reports/filled_template-1144032306.html, /home/sbaldin/Ivan Ivanov foreign invoice.pdf
[INFO] 30.01.2020 23:08:26 [main] com.github.sbaldin.invoicer.processor.SaveAsPdfProcessor  - Following command will be executed: 
 /home/sbaldin/workspace/employer_reports/binaries/phantomjs_lin64, /home/sbaldin/workspace/employer_reports/binaries/rasterize.js, /home/sbaldin/workspace/employer_reports/filled_template403852473.html, /home/sbaldin/Ivan Ivanov local invoice.pdf
[INFO] 30.01.2020 23:08:27 [main] com.github.sbaldin.invoicer.ApplicationKt  - Invoice generation completed.
[INFO] 30.01.2020 23:09:34 [main] com.github.sbaldin.invoicer.ApplicationKt  - Args:./build/resources/main/application.yaml
[INFO] 30.01.2020 23:09:34 [main] com.github.sbaldin.invoicer.ApplicationKt  - Application config path:./build/resources/main/application.yaml
[INFO] 30.01.2020 23:09:35 [main] com.github.sbaldin.invoicer.ApplicationKt  - Invoice generation started. 
 Application will produce full-filled pdf files with signatures.
[DEBUG] 30.01.2020 23:09:35 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Could not find template in cache, creating new one; id=["invoice_foreign.html"["en_US",UTF-8,parsed] ]
[DEBUG] 30.01.2020 23:09:35 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Compiling FreeMarker template "invoice_foreign.html"["en_US",UTF-8,parsed]  from "jar:file:/home/sbaldin/workspace/employer_reports/build/install/invoicer-shadow/lib/invoicer-0.3-all.jar!/invoice_foreign.html"
[DEBUG] 30.01.2020 23:09:35 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Could not find template in cache, creating new one; id=["invoice_local.html"["en_US",UTF-8,parsed] ]
[DEBUG] 30.01.2020 23:09:35 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Compiling FreeMarker template "invoice_local.html"["en_US",UTF-8,parsed]  from "jar:file:/home/sbaldin/workspace/employer_reports/build/install/invoicer-shadow/lib/invoicer-0.3-all.jar!/invoice_local.html"
[INFO] 30.01.2020 23:09:35 [main] com.github.sbaldin.invoicer.processor.SaveAsPdfProcessor  - Following command will be executed: 
 /home/sbaldin/workspace/employer_reports/binaries/phantomjs_lin64, /home/sbaldin/workspace/employer_reports/binaries/rasterize.js, /home/sbaldin/workspace/employer_reports/filled_template1530240904.html, /home/sbaldin/Ivan Ivanov foreign invoice.pdf
[INFO] 30.01.2020 23:09:35 [main] com.github.sbaldin.invoicer.processor.SaveAsPdfProcessor  - Following command will be executed: 
 /home/sbaldin/workspace/employer_reports/binaries/phantomjs_lin64, /home/sbaldin/workspace/employer_reports/binaries/rasterize.js, /home/sbaldin/workspace/employer_reports/filled_template-1658145553.html, /home/sbaldin/Ivan Ivanov local invoice.pdf
[INFO] 30.01.2020 23:09:36 [main] com.github.sbaldin.invoicer.ApplicationKt  - Invoice generation completed.
[INFO] 31.01.2020 19:04:14 [main] com.github.sbaldin.invoicer.ApplicationKt  - Args:./build/resources/main/application.yaml, 25.1.2020
[INFO] 31.01.2020 19:04:14 [main] com.github.sbaldin.invoicer.ApplicationKt  - Application config path:./build/resources/main/application.yaml
[INFO] 31.01.2020 19:04:14 [main] com.github.sbaldin.invoicer.ApplicationKt  - Following date will be used instead of `now` Sat Jan 25 00:01:00 KRAT 2020
[INFO] 31.01.2020 19:04:15 [main] com.github.sbaldin.invoicer.ApplicationKt  - Invoice generation started. 
 Application will produce full-filled pdf files with signatures.
[DEBUG] 31.01.2020 19:04:15 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Could not find template in cache, creating new one; id=["invoice_foreign.html"["en_US",UTF-8,parsed] ]
[DEBUG] 31.01.2020 19:04:15 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Compiling FreeMarker template "invoice_foreign.html"["en_US",UTF-8,parsed]  from "jar:file:/home/sbaldin/workspace/employer_reports/build/install/invoicer-shadow/lib/invoicer-0.3-all.jar!/invoice_foreign.html"
[DEBUG] 31.01.2020 19:04:15 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Could not find template in cache, creating new one; id=["invoice_local.html"["en_US",UTF-8,parsed] ]
[DEBUG] 31.01.2020 19:04:15 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Compiling FreeMarker template "invoice_local.html"["en_US",UTF-8,parsed]  from "jar:file:/home/sbaldin/workspace/employer_reports/build/install/invoicer-shadow/lib/invoicer-0.3-all.jar!/invoice_local.html"
[INFO] 31.01.2020 19:04:15 [main] com.github.sbaldin.invoicer.processor.SaveAsPdfProcessor  - Following command will be executed: 
 /home/sbaldin/workspace/employer_reports/binaries/phantomjs_lin64, /home/sbaldin/workspace/employer_reports/binaries/rasterize.js, /home/sbaldin/workspace/employer_reports/filled_template288307808.html, /home/sbaldin/Ivan Ivanov foreign invoice.pdf
[INFO] 31.01.2020 19:04:15 [main] com.github.sbaldin.invoicer.processor.SaveAsPdfProcessor  - Following command will be executed: 
 /home/sbaldin/workspace/employer_reports/binaries/phantomjs_lin64, /home/sbaldin/workspace/employer_reports/binaries/rasterize.js, /home/sbaldin/workspace/employer_reports/filled_template1867059448.html, /home/sbaldin/Ivan Ivanov local invoice.pdf
[INFO] 31.01.2020 19:04:15 [main] com.github.sbaldin.invoicer.ApplicationKt  - Invoice generation completed.
[INFO] 31.01.2020 19:05:51 [main] com.github.sbaldin.invoicer.ApplicationKt  - Args:./build/resources/main/application.yaml, 25.1.2020
[INFO] 31.01.2020 19:05:51 [main] com.github.sbaldin.invoicer.ApplicationKt  - Application config path:./build/resources/main/application.yaml
[INFO] 31.01.2020 19:05:51 [main] com.github.sbaldin.invoicer.ApplicationKt  - Following date will be used instead of `now` Sat Jan 25 00:01:00 KRAT 2020
[INFO] 31.01.2020 19:05:51 [main] com.github.sbaldin.invoicer.ApplicationKt  - Invoice generation started. 
 Application will produce full-filled pdf files with signatures.
[DEBUG] 31.01.2020 19:05:51 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Could not find template in cache, creating new one; id=["invoice_foreign.html"["en_US",UTF-8,parsed] ]
[DEBUG] 31.01.2020 19:05:51 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Compiling FreeMarker template "invoice_foreign.html"["en_US",UTF-8,parsed]  from "jar:file:/home/sbaldin/workspace/employer_reports/build/install/invoicer-shadow/lib/invoicer-0.3-all.jar!/invoice_foreign.html"
[DEBUG] 31.01.2020 19:05:51 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Could not find template in cache, creating new one; id=["invoice_local.html"["en_US",UTF-8,parsed] ]
[DEBUG] 31.01.2020 19:05:51 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Compiling FreeMarker template "invoice_local.html"["en_US",UTF-8,parsed]  from "jar:file:/home/sbaldin/workspace/employer_reports/build/install/invoicer-shadow/lib/invoicer-0.3-all.jar!/invoice_local.html"
[INFO] 31.01.2020 19:05:51 [main] com.github.sbaldin.invoicer.processor.SaveAsPdfProcessor  - Following command will be executed: 
 /home/sbaldin/workspace/employer_reports/binaries/phantomjs_lin64, /home/sbaldin/workspace/employer_reports/binaries/rasterize.js, /home/sbaldin/workspace/employer_reports/filled_template-632007778.html, /home/sbaldin/Ivan Ivanov foreign invoice.pdf
[INFO] 31.01.2020 19:05:52 [main] com.github.sbaldin.invoicer.processor.SaveAsPdfProcessor  - Following command will be executed: 
 /home/sbaldin/workspace/employer_reports/binaries/phantomjs_lin64, /home/sbaldin/workspace/employer_reports/binaries/rasterize.js, /home/sbaldin/workspace/employer_reports/filled_template990979807.html, /home/sbaldin/Ivan Ivanov local invoice.pdf
[INFO] 31.01.2020 19:05:52 [main] com.github.sbaldin.invoicer.ApplicationKt  - Invoice generation completed.
[INFO] 31.01.2020 19:07:20 [main] com.github.sbaldin.invoicer.ApplicationKt  - Args:./build/resources/main/application.yaml, 25.1.2020
[INFO] 31.01.2020 19:07:20 [main] com.github.sbaldin.invoicer.ApplicationKt  - Application config path:./build/resources/main/application.yaml
[INFO] 31.01.2020 19:07:20 [main] com.github.sbaldin.invoicer.ApplicationKt  - Following date will be used instead of `now` Sat Jan 25 00:01:00 KRAT 2020
[INFO] 31.01.2020 19:07:21 [main] com.github.sbaldin.invoicer.ApplicationKt  - Invoice generation started. 
 Application will produce full-filled pdf files with signatures.
[DEBUG] 31.01.2020 19:07:21 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Could not find template in cache, creating new one; id=["invoice_foreign.html"["en_US",UTF-8,parsed] ]
[DEBUG] 31.01.2020 19:07:21 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Compiling FreeMarker template "invoice_foreign.html"["en_US",UTF-8,parsed]  from "jar:file:/home/sbaldin/workspace/employer_reports/build/install/invoicer-shadow/lib/invoicer-0.3-all.jar!/invoice_foreign.html"
[DEBUG] 31.01.2020 19:07:21 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Could not find template in cache, creating new one; id=["invoice_local.html"["en_US",UTF-8,parsed] ]
[DEBUG] 31.01.2020 19:07:21 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Compiling FreeMarker template "invoice_local.html"["en_US",UTF-8,parsed]  from "jar:file:/home/sbaldin/workspace/employer_reports/build/install/invoicer-shadow/lib/invoicer-0.3-all.jar!/invoice_local.html"
[INFO] 31.01.2020 19:07:21 [main] com.github.sbaldin.invoicer.processor.SaveAsPdfProcessor  - Following command will be executed: 
 /home/sbaldin/workspace/employer_reports/binaries/phantomjs_lin64, /home/sbaldin/workspace/employer_reports/binaries/rasterize.js, /home/sbaldin/workspace/employer_reports/filled_template-1578556816.html, /home/sbaldin/Ivan Ivanov foreign invoice.pdf
[INFO] 31.01.2020 19:07:21 [main] com.github.sbaldin.invoicer.processor.SaveAsPdfProcessor  - Following command will be executed: 
 /home/sbaldin/workspace/employer_reports/binaries/phantomjs_lin64, /home/sbaldin/workspace/employer_reports/binaries/rasterize.js, /home/sbaldin/workspace/employer_reports/filled_template-312274785.html, /home/sbaldin/Ivan Ivanov local invoice.pdf
[INFO] 31.01.2020 19:07:22 [main] com.github.sbaldin.invoicer.ApplicationKt  - Invoice generation completed.
[INFO] 31.01.2020 19:09:26 [main] com.github.sbaldin.invoicer.ApplicationKt  - Args:./build/resources/main/application.yaml, 25.1.2020
[INFO] 31.01.2020 19:09:26 [main] com.github.sbaldin.invoicer.ApplicationKt  - Application config path:./build/resources/main/application.yaml
[INFO] 31.01.2020 19:09:26 [main] com.github.sbaldin.invoicer.ApplicationKt  - Following date will be used instead of `now` Sat Jan 25 00:01:00 KRAT 2020
[INFO] 31.01.2020 19:09:27 [main] com.github.sbaldin.invoicer.ApplicationKt  - Invoice generation started. 
 Application will produce full-filled pdf files with signatures.
[DEBUG] 31.01.2020 19:09:27 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Could not find template in cache, creating new one; id=["invoice_foreign.html"["en_US",UTF-8,parsed] ]
[DEBUG] 31.01.2020 19:09:27 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Compiling FreeMarker template "invoice_foreign.html"["en_US",UTF-8,parsed]  from "jar:file:/home/sbaldin/workspace/employer_reports/build/install/invoicer-shadow/lib/invoicer-0.3-all.jar!/invoice_foreign.html"
[DEBUG] 31.01.2020 19:09:27 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Could not find template in cache, creating new one; id=["invoice_local.html"["en_US",UTF-8,parsed] ]
[DEBUG] 31.01.2020 19:09:27 [main] freemarker.log._Log4JLoggerFactory$Log4JLogger  - Compiling FreeMarker template "invoice_local.html"["en_US",UTF-8,parsed]  from "jar:file:/home/sbaldin/workspace/employer_reports/build/install/invoicer-shadow/lib/invoicer-0.3-all.jar!/invoice_local.html"
[INFO] 31.01.2020 19:09:27 [main] com.github.sbaldin.invoicer.processor.SaveAsPdfProcessor  - Following command will be executed: 
 /home/sbaldin/workspace/employer_reports/binaries/phantomjs_lin64, /home/sbaldin/workspace/employer_reports/binaries/rasterize.js, /home/sbaldin/workspace/employer_reports/filled_template-943265726.html, /home/sbaldin/Ivan Ivanov foreign invoice.pdf
[INFO] 31.01.2020 19:09:28 [main] com.github.sbaldin.invoicer.processor.SaveAsPdfProcessor  - Following command will be executed: 
 /home/sbaldin/workspace/employer_reports/binaries/phantomjs_lin64, /home/sbaldin/workspace/employer_reports/binaries/rasterize.js, /home/sbaldin/workspace/employer_reports/filled_template1906135882.html, /home/sbaldin/Ivan Ivanov local invoice.pdf
[INFO] 31.01.2020 19:09:28 [main] com.github.sbaldin.invoicer.ApplicationKt  - Invoice generation completed.
